{"ast":null,"code":"/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport fs from 'fs';\nconst rmOptions = {\n  force: true,\n  recursive: true,\n  maxRetries: 5\n};\n/**\n * @internal\n */\nexport async function rm(path) {\n  await fs.promises.rm(path, rmOptions);\n}\n/**\n * @internal\n */\nexport function rmSync(path) {\n  fs.rmSync(path, rmOptions);\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,OAAOA,EAAE,MAAM,IAAI;AAEnB,MAAMC,SAAS,GAAG;EAChBC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE,IAAI;EACfC,UAAU,EAAE;CACb;AAED;;;AAGA,OAAO,eAAeC,EAAE,CAACC,IAAY;EACnC,MAAMN,EAAE,CAACO,QAAQ,CAACF,EAAE,CAACC,IAAI,EAAEL,SAAS,CAAC;AACvC;AAEA;;;AAGA,OAAM,SAAUO,MAAM,CAACF,IAAY;EACjCN,EAAE,CAACQ,MAAM,CAACF,IAAI,EAAEL,SAAS,CAAC;AAC5B","names":["fs","rmOptions","force","recursive","maxRetries","rm","path","promises","rmSync"],"sources":["D:\\Julieth-Campos\\PSO\\node_modules\\puppeteer-core\\src\\node\\util\\fs.ts"],"sourcesContent":["/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\n\nconst rmOptions = {\n  force: true,\n  recursive: true,\n  maxRetries: 5,\n};\n\n/**\n * @internal\n */\nexport async function rm(path: string): Promise<void> {\n  await fs.promises.rm(path, rmOptions);\n}\n\n/**\n * @internal\n */\nexport function rmSync(path: string): void {\n  fs.rmSync(path, rmOptions);\n}\n"]},"metadata":{},"sourceType":"module"}