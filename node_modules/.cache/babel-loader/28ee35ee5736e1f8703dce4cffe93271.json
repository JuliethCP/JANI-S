{"ast":null,"code":"import { DEFERRED_PROMISE_DEBUG_TIMEOUT } from '../environment.js';\nimport { Deferred } from './Deferred.js';\n/**\n * Creates and returns a deferred promise using DEFERRED_PROMISE_DEBUG_TIMEOUT\n * if it's specified or a normal deferred promise otherwise.\n *\n * @internal\n */\nexport function createDebuggableDeferred(message) {\n  if (DEFERRED_PROMISE_DEBUG_TIMEOUT > 0) {\n    return Deferred.create({\n      message,\n      timeout: DEFERRED_PROMISE_DEBUG_TIMEOUT\n    });\n  }\n  return Deferred.create();\n}","map":{"version":3,"mappings":"AAAA,SAAQA,8BAA8B,QAAO,mBAAmB;AAEhE,SAAQC,QAAQ,QAAO,eAAe;AAEtC;;;;;;AAMA,OAAM,SAAUC,wBAAwB,CAAIC,OAAe;EACzD,IAAIH,8BAA8B,GAAG,CAAC,EAAE;IACtC,OAAOC,QAAQ,CAACG,MAAM,CAAC;MACrBD,OAAO;MACPE,OAAO,EAAEL;KACV,CAAC;;EAEJ,OAAOC,QAAQ,CAACG,MAAM,EAAE;AAC1B","names":["DEFERRED_PROMISE_DEBUG_TIMEOUT","Deferred","createDebuggableDeferred","message","create","timeout"],"sources":["D:\\Julieth-Campos\\PSO\\node_modules\\puppeteer-core\\src\\util\\DebuggableDeferred.ts"],"sourcesContent":["import {DEFERRED_PROMISE_DEBUG_TIMEOUT} from '../environment.js';\n\nimport {Deferred} from './Deferred.js';\n\n/**\n * Creates and returns a deferred promise using DEFERRED_PROMISE_DEBUG_TIMEOUT\n * if it's specified or a normal deferred promise otherwise.\n *\n * @internal\n */\nexport function createDebuggableDeferred<T>(message: string): Deferred<T> {\n  if (DEFERRED_PROMISE_DEBUG_TIMEOUT > 0) {\n    return Deferred.create({\n      message,\n      timeout: DEFERRED_PROMISE_DEBUG_TIMEOUT,\n    });\n  }\n  return Deferred.create();\n}\n"]},"metadata":{},"sourceType":"module"}