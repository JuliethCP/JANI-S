{"ast":null,"code":"/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport {};","map":{"version":3,"mappings":"AAAA","names":[],"sources":["D:\\Julieth-Campos\\PSO\\node_modules\\puppeteer-core\\src\\node\\LaunchOptions.ts"],"sourcesContent":["/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {BrowserConnectOptions} from '../cdp/BrowserConnector.js';\nimport type {Product} from '../common/Product.js';\n\n/**\n * Launcher options that only apply to Chrome.\n *\n * @public\n */\nexport interface BrowserLaunchArgumentOptions {\n  /**\n   * Whether to run the browser in headless mode.\n   *\n   * @remarks\n   * In the future `headless: true` will be equivalent to `headless: 'new'`.\n   * You can read more about the change {@link https://developer.chrome.com/articles/new-headless/ | here}.\n   * Consider opting in early by setting the value to `\"new\"`.\n   *\n   * @defaultValue `true`\n   */\n  headless?: boolean | 'new';\n  /**\n   * Path to a user data directory.\n   * {@link https://chromium.googlesource.com/chromium/src/+/refs/heads/main/docs/user_data_dir.md | see the Chromium docs}\n   * for more info.\n   */\n  userDataDir?: string;\n  /**\n   * Whether to auto-open a DevTools panel for each tab. If this is set to\n   * `true`, then `headless` will be forced to `false`.\n   * @defaultValue `false`\n   */\n  devtools?: boolean;\n  /**\n   * Specify the debugging port number to use\n   */\n  debuggingPort?: number;\n  /**\n   * Additional command line arguments to pass to the browser instance.\n   */\n  args?: string[];\n}\n/**\n * @public\n */\nexport type ChromeReleaseChannel =\n  | 'chrome'\n  | 'chrome-beta'\n  | 'chrome-canary'\n  | 'chrome-dev';\n\n/**\n * Generic launch options that can be passed when launching any browser.\n * @public\n */\nexport interface LaunchOptions {\n  /**\n   * Chrome Release Channel\n   */\n  channel?: ChromeReleaseChannel;\n  /**\n   * Path to a browser executable to use instead of the bundled Chromium. Note\n   * that Puppeteer is only guaranteed to work with the bundled Chromium, so use\n   * this setting at your own risk.\n   */\n  executablePath?: string;\n  /**\n   * If `true`, do not use `puppeteer.defaultArgs()` when creating a browser. If\n   * an array is provided, these args will be filtered out. Use this with care -\n   * you probably want the default arguments Puppeteer uses.\n   * @defaultValue `false`\n   */\n  ignoreDefaultArgs?: boolean | string[];\n  /**\n   * Close the browser process on `Ctrl+C`.\n   * @defaultValue `true`\n   */\n  handleSIGINT?: boolean;\n  /**\n   * Close the browser process on `SIGTERM`.\n   * @defaultValue `true`\n   */\n  handleSIGTERM?: boolean;\n  /**\n   * Close the browser process on `SIGHUP`.\n   * @defaultValue `true`\n   */\n  handleSIGHUP?: boolean;\n  /**\n   * Maximum time in milliseconds to wait for the browser to start.\n   * Pass `0` to disable the timeout.\n   * @defaultValue `30_000` (30 seconds).\n   */\n  timeout?: number;\n  /**\n   * If true, pipes the browser process stdout and stderr to `process.stdout`\n   * and `process.stderr`.\n   * @defaultValue `false`\n   */\n  dumpio?: boolean;\n  /**\n   * Specify environment variables that will be visible to the browser.\n   * @defaultValue The contents of `process.env`.\n   */\n  env?: Record<string, string | undefined>;\n  /**\n   * Connect to a browser over a pipe instead of a WebSocket.\n   * @defaultValue `false`\n   */\n  pipe?: boolean;\n  /**\n   * Which browser to launch.\n   * @defaultValue `chrome`\n   */\n  product?: Product;\n  /**\n   * {@link https://searchfox.org/mozilla-release/source/modules/libpref/init/all.js | Additional preferences } that can be passed when launching with Firefox.\n   */\n  extraPrefsFirefox?: Record<string, unknown>;\n  /**\n   * Whether to wait for the initial page to be ready.\n   * Useful when a user explicitly disables that (e.g. `--no-startup-window` for Chrome).\n   * @defaultValue `true`\n   */\n  waitForInitialPage?: boolean;\n}\n\n/**\n * Utility type exposed to enable users to define options that can be passed to\n * `puppeteer.launch` without having to list the set of all types.\n * @public\n */\nexport type PuppeteerNodeLaunchOptions = BrowserLaunchArgumentOptions &\n  LaunchOptions &\n  BrowserConnectOptions;\n"]},"metadata":{},"sourceType":"module"}