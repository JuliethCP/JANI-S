{"ast":null,"code":"/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The SecurityDetails class represents the security details of a\n * response that was received over a secure connection.\n *\n * @public\n */\nexport class SecurityDetails {\n  #subjectName;\n  #issuer;\n  #validFrom;\n  #validTo;\n  #protocol;\n  #sanList;\n  /**\n   * @internal\n   */\n  constructor(securityPayload) {\n    this.#subjectName = securityPayload.subjectName;\n    this.#issuer = securityPayload.issuer;\n    this.#validFrom = securityPayload.validFrom;\n    this.#validTo = securityPayload.validTo;\n    this.#protocol = securityPayload.protocol;\n    this.#sanList = securityPayload.sanList;\n  }\n  /**\n   * The name of the issuer of the certificate.\n   */\n  issuer() {\n    return this.#issuer;\n  }\n  /**\n   * {@link https://en.wikipedia.org/wiki/Unix_time | Unix timestamp}\n   * marking the start of the certificate's validity.\n   */\n  validFrom() {\n    return this.#validFrom;\n  }\n  /**\n   * {@link https://en.wikipedia.org/wiki/Unix_time | Unix timestamp}\n   * marking the end of the certificate's validity.\n   */\n  validTo() {\n    return this.#validTo;\n  }\n  /**\n   * The security protocol being used, e.g. \"TLS 1.2\".\n   */\n  protocol() {\n    return this.#protocol;\n  }\n  /**\n   * The name of the subject to which the certificate was issued.\n   */\n  subjectName() {\n    return this.#subjectName;\n  }\n  /**\n   * The list of {@link https://en.wikipedia.org/wiki/Subject_Alternative_Name | subject alternative names (SANs)} of the certificate.\n   */\n  subjectAlternativeNames() {\n    return this.#sanList;\n  }\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;AAkBA;;;;;;AAMA,OAAM,MAAOA,eAAe;EAC1B,YAAY;EACZ,OAAO;EACP,UAAU;EACV,QAAQ;EACR,SAAS;EACT,QAAQ;EAER;;;EAGAC,YAAYC,eAAiD;IAC3D,IAAI,CAAC,YAAY,GAAGA,eAAe,CAACC,WAAW;IAC/C,IAAI,CAAC,OAAO,GAAGD,eAAe,CAACE,MAAM;IACrC,IAAI,CAAC,UAAU,GAAGF,eAAe,CAACG,SAAS;IAC3C,IAAI,CAAC,QAAQ,GAAGH,eAAe,CAACI,OAAO;IACvC,IAAI,CAAC,SAAS,GAAGJ,eAAe,CAACK,QAAQ;IACzC,IAAI,CAAC,QAAQ,GAAGL,eAAe,CAACM,OAAO;EACzC;EAEA;;;EAGAJ,MAAM;IACJ,OAAO,IAAI,CAAC,OAAO;EACrB;EAEA;;;;EAIAC,SAAS;IACP,OAAO,IAAI,CAAC,UAAU;EACxB;EAEA;;;;EAIAC,OAAO;IACL,OAAO,IAAI,CAAC,QAAQ;EACtB;EAEA;;;EAGAC,QAAQ;IACN,OAAO,IAAI,CAAC,SAAS;EACvB;EAEA;;;EAGAJ,WAAW;IACT,OAAO,IAAI,CAAC,YAAY;EAC1B;EAEA;;;EAGAM,uBAAuB;IACrB,OAAO,IAAI,CAAC,QAAQ;EACtB","names":["SecurityDetails","constructor","securityPayload","subjectName","issuer","validFrom","validTo","protocol","sanList","subjectAlternativeNames"],"sources":["D:\\Julieth-Campos\\PSO\\node_modules\\puppeteer-core\\src\\common\\SecurityDetails.ts"],"sourcesContent":["/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {Protocol} from 'devtools-protocol';\n\n/**\n * The SecurityDetails class represents the security details of a\n * response that was received over a secure connection.\n *\n * @public\n */\nexport class SecurityDetails {\n  #subjectName: string;\n  #issuer: string;\n  #validFrom: number;\n  #validTo: number;\n  #protocol: string;\n  #sanList: string[];\n\n  /**\n   * @internal\n   */\n  constructor(securityPayload: Protocol.Network.SecurityDetails) {\n    this.#subjectName = securityPayload.subjectName;\n    this.#issuer = securityPayload.issuer;\n    this.#validFrom = securityPayload.validFrom;\n    this.#validTo = securityPayload.validTo;\n    this.#protocol = securityPayload.protocol;\n    this.#sanList = securityPayload.sanList;\n  }\n\n  /**\n   * The name of the issuer of the certificate.\n   */\n  issuer(): string {\n    return this.#issuer;\n  }\n\n  /**\n   * {@link https://en.wikipedia.org/wiki/Unix_time | Unix timestamp}\n   * marking the start of the certificate's validity.\n   */\n  validFrom(): number {\n    return this.#validFrom;\n  }\n\n  /**\n   * {@link https://en.wikipedia.org/wiki/Unix_time | Unix timestamp}\n   * marking the end of the certificate's validity.\n   */\n  validTo(): number {\n    return this.#validTo;\n  }\n\n  /**\n   * The security protocol being used, e.g. \"TLS 1.2\".\n   */\n  protocol(): string {\n    return this.#protocol;\n  }\n\n  /**\n   * The name of the subject to which the certificate was issued.\n   */\n  subjectName(): string {\n    return this.#subjectName;\n  }\n\n  /**\n   * The list of {@link https://en.wikipedia.org/wiki/Subject_Alternative_Name | subject alternative names (SANs)} of the certificate.\n   */\n  subjectAlternativeNames(): string[] {\n    return this.#sanList;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}