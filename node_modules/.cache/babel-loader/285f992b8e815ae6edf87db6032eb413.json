{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unwrapJavascript = exports.unwrapTypescript = void 0;\n/** Typescript thinks import('...js/.d.ts') needs mod.default.default */\nfunction fakeUnwrapDefault(mod) {\n  // console.log(\"fakeUnwrapDefault\", mod)\n  return mod.default;\n}\n/** Typescript thinks import('...ts') doesn't need mod.default.default, but does */\nfunction actualUnwrapDefault(mod) {\n  // console.log(\"actualUnwrapDefault\", mod)\n  const maybeUnwrap = mod.default;\n  return maybeUnwrap ?? mod;\n}\n// I'm not sure if this behavior is needed in all runtimes,\n// or just for mocha + ts-node.\nexports.unwrapTypescript = actualUnwrapDefault;\nexports.unwrapJavascript = fakeUnwrapDefault;","map":{"version":3,"mappings":";;;;;;AAAA;AACA,SAASA,iBAAiB,CAAIC,GAAmB;EAC/C;EACA,OAAOA,GAAG,CAACC,OAAY;AACzB;AAEA;AACA,SAASC,mBAAmB,CAAIF,GAAM;EACpC;EACA,MAAMG,WAAW,GAAIH,GAAW,CAACC,OAAO;EACxC,OAAOE,WAAW,IAAIH,GAAG;AAC3B;AAEA;AACA;AACaI,wBAAgB,GAAGF,mBAAmB;AACtCE,wBAAgB,GAAGL,iBAAiB","names":["fakeUnwrapDefault","mod","default","actualUnwrapDefault","maybeUnwrap","exports"],"sources":["D:\\Julieth-Campos\\PSO\\node_modules\\@tootallnate\\quickjs-emscripten\\ts\\esmHelpers.ts"],"sourcesContent":["/** Typescript thinks import('...js/.d.ts') needs mod.default.default */\nfunction fakeUnwrapDefault<T>(mod: { default: T }): T {\n  // console.log(\"fakeUnwrapDefault\", mod)\n  return mod.default as T\n}\n\n/** Typescript thinks import('...ts') doesn't need mod.default.default, but does */\nfunction actualUnwrapDefault<T>(mod: T): T {\n  // console.log(\"actualUnwrapDefault\", mod)\n  const maybeUnwrap = (mod as any).default\n  return maybeUnwrap ?? mod\n}\n\n// I'm not sure if this behavior is needed in all runtimes,\n// or just for mocha + ts-node.\nexport const unwrapTypescript = actualUnwrapDefault\nexport const unwrapJavascript = fakeUnwrapDefault\n"]},"metadata":{},"sourceType":"script"}