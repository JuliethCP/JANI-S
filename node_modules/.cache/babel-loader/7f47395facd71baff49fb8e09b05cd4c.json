{"ast":null,"code":"/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as chromeHeadlessShell from './chrome-headless-shell.js';\nimport * as chrome from './chrome.js';\nimport * as chromedriver from './chromedriver.js';\nimport * as chromium from './chromium.js';\nimport * as firefox from './firefox.js';\nimport { Browser, BrowserPlatform, BrowserTag, ChromeReleaseChannel } from './types.js';\nexport const downloadUrls = {\n  [Browser.CHROMEDRIVER]: chromedriver.resolveDownloadUrl,\n  [Browser.CHROMEHEADLESSSHELL]: chromeHeadlessShell.resolveDownloadUrl,\n  [Browser.CHROME]: chrome.resolveDownloadUrl,\n  [Browser.CHROMIUM]: chromium.resolveDownloadUrl,\n  [Browser.FIREFOX]: firefox.resolveDownloadUrl\n};\nexport const downloadPaths = {\n  [Browser.CHROMEDRIVER]: chromedriver.resolveDownloadPath,\n  [Browser.CHROMEHEADLESSSHELL]: chromeHeadlessShell.resolveDownloadPath,\n  [Browser.CHROME]: chrome.resolveDownloadPath,\n  [Browser.CHROMIUM]: chromium.resolveDownloadPath,\n  [Browser.FIREFOX]: firefox.resolveDownloadPath\n};\nexport const executablePathByBrowser = {\n  [Browser.CHROMEDRIVER]: chromedriver.relativeExecutablePath,\n  [Browser.CHROMEHEADLESSSHELL]: chromeHeadlessShell.relativeExecutablePath,\n  [Browser.CHROME]: chrome.relativeExecutablePath,\n  [Browser.CHROMIUM]: chromium.relativeExecutablePath,\n  [Browser.FIREFOX]: firefox.relativeExecutablePath\n};\nexport { Browser, BrowserPlatform, ChromeReleaseChannel };\n/**\n * @public\n */\nexport async function resolveBuildId(browser, platform, tag) {\n  switch (browser) {\n    case Browser.FIREFOX:\n      switch (tag) {\n        case BrowserTag.LATEST:\n          return await firefox.resolveBuildId('FIREFOX_NIGHTLY');\n        case BrowserTag.BETA:\n        case BrowserTag.CANARY:\n        case BrowserTag.DEV:\n        case BrowserTag.STABLE:\n          throw new Error(`${tag} is not supported for ${browser}. Use 'latest' instead.`);\n      }\n    case Browser.CHROME:\n      {\n        switch (tag) {\n          case BrowserTag.LATEST:\n            return await chrome.resolveBuildId(ChromeReleaseChannel.CANARY);\n          case BrowserTag.BETA:\n            return await chrome.resolveBuildId(ChromeReleaseChannel.BETA);\n          case BrowserTag.CANARY:\n            return await chrome.resolveBuildId(ChromeReleaseChannel.CANARY);\n          case BrowserTag.DEV:\n            return await chrome.resolveBuildId(ChromeReleaseChannel.DEV);\n          case BrowserTag.STABLE:\n            return await chrome.resolveBuildId(ChromeReleaseChannel.STABLE);\n          default:\n            const result = await chrome.resolveBuildId(tag);\n            if (result) {\n              return result;\n            }\n        }\n        return tag;\n      }\n    case Browser.CHROMEDRIVER:\n      {\n        switch (tag) {\n          case BrowserTag.LATEST:\n          case BrowserTag.CANARY:\n            return await chromedriver.resolveBuildId(ChromeReleaseChannel.CANARY);\n          case BrowserTag.BETA:\n            return await chromedriver.resolveBuildId(ChromeReleaseChannel.BETA);\n          case BrowserTag.DEV:\n            return await chromedriver.resolveBuildId(ChromeReleaseChannel.DEV);\n          case BrowserTag.STABLE:\n            return await chromedriver.resolveBuildId(ChromeReleaseChannel.STABLE);\n          default:\n            const result = await chromedriver.resolveBuildId(tag);\n            if (result) {\n              return result;\n            }\n        }\n        return tag;\n      }\n    case Browser.CHROMEHEADLESSSHELL:\n      {\n        switch (tag) {\n          case BrowserTag.LATEST:\n          case BrowserTag.CANARY:\n            return await chromeHeadlessShell.resolveBuildId(ChromeReleaseChannel.CANARY);\n          case BrowserTag.BETA:\n            return await chromeHeadlessShell.resolveBuildId(ChromeReleaseChannel.BETA);\n          case BrowserTag.DEV:\n            return await chromeHeadlessShell.resolveBuildId(ChromeReleaseChannel.DEV);\n          case BrowserTag.STABLE:\n            return await chromeHeadlessShell.resolveBuildId(ChromeReleaseChannel.STABLE);\n          default:\n            const result = await chromeHeadlessShell.resolveBuildId(tag);\n            if (result) {\n              return result;\n            }\n        }\n        return tag;\n      }\n    case Browser.CHROMIUM:\n      switch (tag) {\n        case BrowserTag.LATEST:\n          return await chromium.resolveBuildId(platform);\n        case BrowserTag.BETA:\n        case BrowserTag.CANARY:\n        case BrowserTag.DEV:\n        case BrowserTag.STABLE:\n          throw new Error(`${tag} is not supported for ${browser}. Use 'latest' instead.`);\n      }\n  }\n  // We assume the tag is the buildId if it didn't match any keywords.\n  return tag;\n}\n/**\n * @public\n */\nexport async function createProfile(browser, opts) {\n  switch (browser) {\n    case Browser.FIREFOX:\n      return await firefox.createProfile(opts);\n    case Browser.CHROME:\n    case Browser.CHROMIUM:\n      throw new Error(`Profile creation is not support for ${browser} yet`);\n  }\n}\n/**\n * @public\n */\nexport function resolveSystemExecutablePath(browser, platform, channel) {\n  switch (browser) {\n    case Browser.CHROMEDRIVER:\n    case Browser.CHROMEHEADLESSSHELL:\n    case Browser.FIREFOX:\n    case Browser.CHROMIUM:\n      throw new Error(`System browser detection is not supported for ${browser} yet.`);\n    case Browser.CHROME:\n      return chrome.resolveSystemExecutablePath(platform, channel);\n  }\n}","map":{"version":3,"mappings":"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","names":["chromeHeadlessShell","chrome","chromedriver","chromium","firefox","Browser","BrowserPlatform","BrowserTag","ChromeReleaseChannel","downloadUrls","CHROMEDRIVER","resolveDownloadUrl","CHROMEHEADLESSSHELL","CHROME","CHROMIUM","FIREFOX","downloadPaths","resolveDownloadPath","executablePathByBrowser","relativeExecutablePath","resolveBuildId","browser","platform","tag","LATEST","BETA","CANARY","DEV","STABLE","Error","result","createProfile","opts","resolveSystemExecutablePath","channel"],"sources":["D:\\Julieth-Campos\\PSO\\node_modules\\@puppeteer\\browsers\\src\\browser-data\\browser-data.ts"],"sourcesContent":["/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as chromeHeadlessShell from './chrome-headless-shell.js';\nimport * as chrome from './chrome.js';\nimport * as chromedriver from './chromedriver.js';\nimport * as chromium from './chromium.js';\nimport * as firefox from './firefox.js';\nimport {\n  Browser,\n  BrowserPlatform,\n  BrowserTag,\n  ChromeReleaseChannel,\n  type ProfileOptions,\n} from './types.js';\n\nexport type {ProfileOptions};\n\nexport const downloadUrls = {\n  [Browser.CHROMEDRIVER]: chromedriver.resolveDownloadUrl,\n  [Browser.CHROMEHEADLESSSHELL]: chromeHeadlessShell.resolveDownloadUrl,\n  [Browser.CHROME]: chrome.resolveDownloadUrl,\n  [Browser.CHROMIUM]: chromium.resolveDownloadUrl,\n  [Browser.FIREFOX]: firefox.resolveDownloadUrl,\n};\n\nexport const downloadPaths = {\n  [Browser.CHROMEDRIVER]: chromedriver.resolveDownloadPath,\n  [Browser.CHROMEHEADLESSSHELL]: chromeHeadlessShell.resolveDownloadPath,\n  [Browser.CHROME]: chrome.resolveDownloadPath,\n  [Browser.CHROMIUM]: chromium.resolveDownloadPath,\n  [Browser.FIREFOX]: firefox.resolveDownloadPath,\n};\n\nexport const executablePathByBrowser = {\n  [Browser.CHROMEDRIVER]: chromedriver.relativeExecutablePath,\n  [Browser.CHROMEHEADLESSSHELL]: chromeHeadlessShell.relativeExecutablePath,\n  [Browser.CHROME]: chrome.relativeExecutablePath,\n  [Browser.CHROMIUM]: chromium.relativeExecutablePath,\n  [Browser.FIREFOX]: firefox.relativeExecutablePath,\n};\n\nexport {Browser, BrowserPlatform, ChromeReleaseChannel};\n\n/**\n * @public\n */\nexport async function resolveBuildId(\n  browser: Browser,\n  platform: BrowserPlatform,\n  tag: string\n): Promise<string> {\n  switch (browser) {\n    case Browser.FIREFOX:\n      switch (tag as BrowserTag) {\n        case BrowserTag.LATEST:\n          return await firefox.resolveBuildId('FIREFOX_NIGHTLY');\n        case BrowserTag.BETA:\n        case BrowserTag.CANARY:\n        case BrowserTag.DEV:\n        case BrowserTag.STABLE:\n          throw new Error(\n            `${tag} is not supported for ${browser}. Use 'latest' instead.`\n          );\n      }\n    case Browser.CHROME: {\n      switch (tag as BrowserTag) {\n        case BrowserTag.LATEST:\n          return await chrome.resolveBuildId(ChromeReleaseChannel.CANARY);\n        case BrowserTag.BETA:\n          return await chrome.resolveBuildId(ChromeReleaseChannel.BETA);\n        case BrowserTag.CANARY:\n          return await chrome.resolveBuildId(ChromeReleaseChannel.CANARY);\n        case BrowserTag.DEV:\n          return await chrome.resolveBuildId(ChromeReleaseChannel.DEV);\n        case BrowserTag.STABLE:\n          return await chrome.resolveBuildId(ChromeReleaseChannel.STABLE);\n        default:\n          const result = await chrome.resolveBuildId(tag);\n          if (result) {\n            return result;\n          }\n      }\n      return tag;\n    }\n    case Browser.CHROMEDRIVER: {\n      switch (tag) {\n        case BrowserTag.LATEST:\n        case BrowserTag.CANARY:\n          return await chromedriver.resolveBuildId(ChromeReleaseChannel.CANARY);\n        case BrowserTag.BETA:\n          return await chromedriver.resolveBuildId(ChromeReleaseChannel.BETA);\n        case BrowserTag.DEV:\n          return await chromedriver.resolveBuildId(ChromeReleaseChannel.DEV);\n        case BrowserTag.STABLE:\n          return await chromedriver.resolveBuildId(ChromeReleaseChannel.STABLE);\n        default:\n          const result = await chromedriver.resolveBuildId(tag);\n          if (result) {\n            return result;\n          }\n      }\n      return tag;\n    }\n    case Browser.CHROMEHEADLESSSHELL: {\n      switch (tag) {\n        case BrowserTag.LATEST:\n        case BrowserTag.CANARY:\n          return await chromeHeadlessShell.resolveBuildId(\n            ChromeReleaseChannel.CANARY\n          );\n        case BrowserTag.BETA:\n          return await chromeHeadlessShell.resolveBuildId(\n            ChromeReleaseChannel.BETA\n          );\n        case BrowserTag.DEV:\n          return await chromeHeadlessShell.resolveBuildId(\n            ChromeReleaseChannel.DEV\n          );\n        case BrowserTag.STABLE:\n          return await chromeHeadlessShell.resolveBuildId(\n            ChromeReleaseChannel.STABLE\n          );\n        default:\n          const result = await chromeHeadlessShell.resolveBuildId(tag);\n          if (result) {\n            return result;\n          }\n      }\n      return tag;\n    }\n    case Browser.CHROMIUM:\n      switch (tag as BrowserTag) {\n        case BrowserTag.LATEST:\n          return await chromium.resolveBuildId(platform);\n        case BrowserTag.BETA:\n        case BrowserTag.CANARY:\n        case BrowserTag.DEV:\n        case BrowserTag.STABLE:\n          throw new Error(\n            `${tag} is not supported for ${browser}. Use 'latest' instead.`\n          );\n      }\n  }\n  // We assume the tag is the buildId if it didn't match any keywords.\n  return tag;\n}\n\n/**\n * @public\n */\nexport async function createProfile(\n  browser: Browser,\n  opts: ProfileOptions\n): Promise<void> {\n  switch (browser) {\n    case Browser.FIREFOX:\n      return await firefox.createProfile(opts);\n    case Browser.CHROME:\n    case Browser.CHROMIUM:\n      throw new Error(`Profile creation is not support for ${browser} yet`);\n  }\n}\n\n/**\n * @public\n */\nexport function resolveSystemExecutablePath(\n  browser: Browser,\n  platform: BrowserPlatform,\n  channel: ChromeReleaseChannel\n): string {\n  switch (browser) {\n    case Browser.CHROMEDRIVER:\n    case Browser.CHROMEHEADLESSSHELL:\n    case Browser.FIREFOX:\n    case Browser.CHROMIUM:\n      throw new Error(\n        `System browser detection is not supported for ${browser} yet.`\n      );\n    case Browser.CHROME:\n      return chrome.resolveSystemExecutablePath(platform, channel);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}