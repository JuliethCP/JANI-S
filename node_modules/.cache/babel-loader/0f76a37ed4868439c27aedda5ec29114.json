{"ast":null,"code":"/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { mkdtemp } from 'fs/promises';\nimport path from 'path';\nimport { computeSystemExecutablePath, Browser as SupportedBrowsers, ChromeReleaseChannel as BrowsersChromeReleaseChannel } from '@puppeteer/browsers';\nimport { debugError } from '../common/util.js';\nimport { assert } from '../util/assert.js';\nimport { ProductLauncher } from './ProductLauncher.js';\nimport { rm } from './util/fs.js';\n/**\n * @internal\n */\nexport class ChromeLauncher extends ProductLauncher {\n  constructor(puppeteer) {\n    super(puppeteer, 'chrome');\n  }\n  launch() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const headless = options.headless ?? true;\n    if (headless === true && this.puppeteer.configuration.logLevel === 'warn' && !Boolean(process.env['PUPPETEER_DISABLE_HEADLESS_WARNING'])) {\n      console.warn(['\\x1B[1m\\x1B[43m\\x1B[30m', 'Puppeteer old Headless deprecation warning:\\x1B[0m\\x1B[33m', '  In the near future `headless: true` will default to the new Headless mode', '  for Chrome instead of the old Headless implementation. For more', '  information, please see https://developer.chrome.com/articles/new-headless/.', '  Consider opting in early by passing `headless: \"new\"` to `puppeteer.launch()`', '  If you encounter any bugs, please report them to https://github.com/puppeteer/puppeteer/issues/new/choose.\\x1B[0m\\n'].join('\\n  '));\n    }\n    return super.launch(options);\n  }\n  /**\n   * @internal\n   */\n  async computeLaunchArguments() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      ignoreDefaultArgs = false,\n      args = [],\n      pipe = false,\n      debuggingPort,\n      channel,\n      executablePath\n    } = options;\n    const chromeArguments = [];\n    if (!ignoreDefaultArgs) {\n      chromeArguments.push(...this.defaultArgs(options));\n    } else if (Array.isArray(ignoreDefaultArgs)) {\n      chromeArguments.push(...this.defaultArgs(options).filter(arg => {\n        return !ignoreDefaultArgs.includes(arg);\n      }));\n    } else {\n      chromeArguments.push(...args);\n    }\n    if (!chromeArguments.some(argument => {\n      return argument.startsWith('--remote-debugging-');\n    })) {\n      if (pipe) {\n        assert(!debuggingPort, 'Browser should be launched with either pipe or debugging port - not both.');\n        chromeArguments.push('--remote-debugging-pipe');\n      } else {\n        chromeArguments.push(`--remote-debugging-port=${debuggingPort || 0}`);\n      }\n    }\n    let isTempUserDataDir = false;\n    // Check for the user data dir argument, which will always be set even\n    // with a custom directory specified via the userDataDir option.\n    let userDataDirIndex = chromeArguments.findIndex(arg => {\n      return arg.startsWith('--user-data-dir');\n    });\n    if (userDataDirIndex < 0) {\n      isTempUserDataDir = true;\n      chromeArguments.push(`--user-data-dir=${await mkdtemp(this.getProfilePath())}`);\n      userDataDirIndex = chromeArguments.length - 1;\n    }\n    const userDataDir = chromeArguments[userDataDirIndex].split('=', 2)[1];\n    assert(typeof userDataDir === 'string', '`--user-data-dir` is malformed');\n    let chromeExecutable = executablePath;\n    if (!chromeExecutable) {\n      assert(channel || !this.puppeteer._isPuppeteerCore, `An \\`executablePath\\` or \\`channel\\` must be specified for \\`puppeteer-core\\``);\n      chromeExecutable = this.executablePath(channel);\n    }\n    return {\n      executablePath: chromeExecutable,\n      args: chromeArguments,\n      isTempUserDataDir,\n      userDataDir\n    };\n  }\n  /**\n   * @internal\n   */\n  async cleanUserDataDir(path, opts) {\n    if (opts.isTemp) {\n      try {\n        await rm(path);\n      } catch (error) {\n        debugError(error);\n        throw error;\n      }\n    }\n  }\n  defaultArgs() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // See https://github.com/GoogleChrome/chrome-launcher/blob/main/docs/chrome-flags-for-tools.md\n    const userDisabledFeatures = getFeatures('--disable-features', options.args);\n    if (options.args && userDisabledFeatures.length > 0) {\n      removeMatchingFlags(options.args, '--disable-features');\n    }\n    // Merge default disabled features with user-provided ones, if any.\n    const disabledFeatures = ['Translate',\n    // AcceptCHFrame disabled because of crbug.com/1348106.\n    'AcceptCHFrame', 'MediaRouter', 'OptimizationHints',\n    // https://crbug.com/1492053\n    'ProcessPerSiteUpToMainFrameThreshold', ...userDisabledFeatures];\n    const userEnabledFeatures = getFeatures('--enable-features', options.args);\n    if (options.args && userEnabledFeatures.length > 0) {\n      removeMatchingFlags(options.args, '--enable-features');\n    }\n    // Merge default enabled features with user-provided ones, if any.\n    const enabledFeatures = ['NetworkServiceInProcess2', ...userEnabledFeatures];\n    const chromeArguments = ['--allow-pre-commit-input', '--disable-background-networking', '--disable-background-timer-throttling', '--disable-backgrounding-occluded-windows', '--disable-breakpad', '--disable-client-side-phishing-detection', '--disable-component-extensions-with-background-pages', '--disable-component-update', '--disable-default-apps', '--disable-dev-shm-usage', '--disable-extensions', `--disable-features=${disabledFeatures.join(',')}`, '--disable-hang-monitor', '--disable-ipc-flooding-protection', '--disable-popup-blocking', '--disable-prompt-on-repost', '--disable-renderer-backgrounding', '--disable-search-engine-choice-screen', '--disable-sync', '--enable-automation',\n    // TODO(sadym): remove '--enable-blink-features=IdleDetection' once\n    // IdleDetection is turned on by default.\n    '--enable-blink-features=IdleDetection', `--enable-features=${enabledFeatures.join(',')}`, '--export-tagged-pdf', '--force-color-profile=srgb', '--metrics-recording-only', '--no-first-run', '--password-store=basic', '--use-mock-keychain'];\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir\n    } = options;\n    if (userDataDir) {\n      chromeArguments.push(`--user-data-dir=${path.resolve(userDataDir)}`);\n    }\n    if (devtools) {\n      chromeArguments.push('--auto-open-devtools-for-tabs');\n    }\n    if (headless) {\n      chromeArguments.push(headless === 'new' ? '--headless=new' : '--headless', '--hide-scrollbars', '--mute-audio');\n    }\n    if (args.every(arg => {\n      return arg.startsWith('-');\n    })) {\n      chromeArguments.push('about:blank');\n    }\n    chromeArguments.push(...args);\n    return chromeArguments;\n  }\n  executablePath(channel) {\n    if (channel) {\n      return computeSystemExecutablePath({\n        browser: SupportedBrowsers.CHROME,\n        channel: convertPuppeteerChannelToBrowsersChannel(channel)\n      });\n    } else {\n      return this.resolveExecutablePath();\n    }\n  }\n}\nfunction convertPuppeteerChannelToBrowsersChannel(channel) {\n  switch (channel) {\n    case 'chrome':\n      return BrowsersChromeReleaseChannel.STABLE;\n    case 'chrome-dev':\n      return BrowsersChromeReleaseChannel.DEV;\n    case 'chrome-beta':\n      return BrowsersChromeReleaseChannel.BETA;\n    case 'chrome-canary':\n      return BrowsersChromeReleaseChannel.CANARY;\n  }\n}\n/**\n * Extracts all features from the given command-line flag\n * (e.g. `--enable-features`, `--enable-features=`).\n *\n * Example input:\n * [\"--enable-features=NetworkService,NetworkServiceInProcess\", \"--enable-features=Foo\"]\n *\n * Example output:\n * [\"NetworkService\", \"NetworkServiceInProcess\", \"Foo\"]\n *\n * @internal\n */\nexport function getFeatures(flag) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return options.filter(s => {\n    return s.startsWith(flag.endsWith('=') ? flag : `${flag}=`);\n  }).map(s => {\n    return s.split(new RegExp(`${flag}` + '=\\\\s*'))[1]?.trim();\n  }).filter(s => {\n    return s;\n  });\n}\n/**\n * Removes all elements in-place from the given string array\n * that match the given command-line flag.\n *\n * @internal\n */\nexport function removeMatchingFlags(array, flag) {\n  const regex = new RegExp(`^${flag}=.*`);\n  let i = 0;\n  while (i < array.length) {\n    if (regex.test(array[i])) {\n      array.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n  return array;\n}","map":{"version":3,"mappings":"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","names":["mkdtemp","path","computeSystemExecutablePath","Browser","SupportedBrowsers","ChromeReleaseChannel","BrowsersChromeReleaseChannel","debugError","assert","ProductLauncher","rm","ChromeLauncher","constructor","puppeteer","launch","options","headless","configuration","logLevel","Boolean","process","env","console","warn","join","computeLaunchArguments","ignoreDefaultArgs","args","pipe","debuggingPort","channel","executablePath","chromeArguments","push","defaultArgs","Array","isArray","filter","arg","includes","some","argument","startsWith","isTempUserDataDir","userDataDirIndex","findIndex","getProfilePath","length","userDataDir","split","chromeExecutable","_isPuppeteerCore","cleanUserDataDir","opts","isTemp","error","userDisabledFeatures","getFeatures","removeMatchingFlags","disabledFeatures","userEnabledFeatures","enabledFeatures","devtools","resolve","every","browser","CHROME","convertPuppeteerChannelToBrowsersChannel","resolveExecutablePath","STABLE","DEV","BETA","CANARY","flag","s","endsWith","map","RegExp","trim","array","regex","i","test","splice"],"sources":["D:\\Julieth-Campos\\PSO\\node_modules\\puppeteer-core\\src\\node\\ChromeLauncher.ts"],"sourcesContent":["/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {mkdtemp} from 'fs/promises';\nimport path from 'path';\n\nimport {\n  computeSystemExecutablePath,\n  Browser as SupportedBrowsers,\n  ChromeReleaseChannel as BrowsersChromeReleaseChannel,\n} from '@puppeteer/browsers';\n\nimport type {Browser} from '../api/Browser.js';\nimport {debugError} from '../common/util.js';\nimport {assert} from '../util/assert.js';\n\nimport type {\n  BrowserLaunchArgumentOptions,\n  ChromeReleaseChannel,\n  PuppeteerNodeLaunchOptions,\n} from './LaunchOptions.js';\nimport {ProductLauncher, type ResolvedLaunchArgs} from './ProductLauncher.js';\nimport type {PuppeteerNode} from './PuppeteerNode.js';\nimport {rm} from './util/fs.js';\n\n/**\n * @internal\n */\nexport class ChromeLauncher extends ProductLauncher {\n  constructor(puppeteer: PuppeteerNode) {\n    super(puppeteer, 'chrome');\n  }\n\n  override launch(options: PuppeteerNodeLaunchOptions = {}): Promise<Browser> {\n    const headless = options.headless ?? true;\n    if (\n      headless === true &&\n      this.puppeteer.configuration.logLevel === 'warn' &&\n      !Boolean(process.env['PUPPETEER_DISABLE_HEADLESS_WARNING'])\n    ) {\n      console.warn(\n        [\n          '\\x1B[1m\\x1B[43m\\x1B[30m',\n          'Puppeteer old Headless deprecation warning:\\x1B[0m\\x1B[33m',\n          '  In the near future `headless: true` will default to the new Headless mode',\n          '  for Chrome instead of the old Headless implementation. For more',\n          '  information, please see https://developer.chrome.com/articles/new-headless/.',\n          '  Consider opting in early by passing `headless: \"new\"` to `puppeteer.launch()`',\n          '  If you encounter any bugs, please report them to https://github.com/puppeteer/puppeteer/issues/new/choose.\\x1B[0m\\n',\n        ].join('\\n  ')\n      );\n    }\n\n    return super.launch(options);\n  }\n\n  /**\n   * @internal\n   */\n  override async computeLaunchArguments(\n    options: PuppeteerNodeLaunchOptions = {}\n  ): Promise<ResolvedLaunchArgs> {\n    const {\n      ignoreDefaultArgs = false,\n      args = [],\n      pipe = false,\n      debuggingPort,\n      channel,\n      executablePath,\n    } = options;\n\n    const chromeArguments = [];\n    if (!ignoreDefaultArgs) {\n      chromeArguments.push(...this.defaultArgs(options));\n    } else if (Array.isArray(ignoreDefaultArgs)) {\n      chromeArguments.push(\n        ...this.defaultArgs(options).filter(arg => {\n          return !ignoreDefaultArgs.includes(arg);\n        })\n      );\n    } else {\n      chromeArguments.push(...args);\n    }\n\n    if (\n      !chromeArguments.some(argument => {\n        return argument.startsWith('--remote-debugging-');\n      })\n    ) {\n      if (pipe) {\n        assert(\n          !debuggingPort,\n          'Browser should be launched with either pipe or debugging port - not both.'\n        );\n        chromeArguments.push('--remote-debugging-pipe');\n      } else {\n        chromeArguments.push(`--remote-debugging-port=${debuggingPort || 0}`);\n      }\n    }\n\n    let isTempUserDataDir = false;\n\n    // Check for the user data dir argument, which will always be set even\n    // with a custom directory specified via the userDataDir option.\n    let userDataDirIndex = chromeArguments.findIndex(arg => {\n      return arg.startsWith('--user-data-dir');\n    });\n    if (userDataDirIndex < 0) {\n      isTempUserDataDir = true;\n      chromeArguments.push(\n        `--user-data-dir=${await mkdtemp(this.getProfilePath())}`\n      );\n      userDataDirIndex = chromeArguments.length - 1;\n    }\n\n    const userDataDir = chromeArguments[userDataDirIndex]!.split('=', 2)[1];\n    assert(typeof userDataDir === 'string', '`--user-data-dir` is malformed');\n\n    let chromeExecutable = executablePath;\n    if (!chromeExecutable) {\n      assert(\n        channel || !this.puppeteer._isPuppeteerCore,\n        `An \\`executablePath\\` or \\`channel\\` must be specified for \\`puppeteer-core\\``\n      );\n      chromeExecutable = this.executablePath(channel);\n    }\n\n    return {\n      executablePath: chromeExecutable,\n      args: chromeArguments,\n      isTempUserDataDir,\n      userDataDir,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  override async cleanUserDataDir(\n    path: string,\n    opts: {isTemp: boolean}\n  ): Promise<void> {\n    if (opts.isTemp) {\n      try {\n        await rm(path);\n      } catch (error) {\n        debugError(error);\n        throw error;\n      }\n    }\n  }\n\n  override defaultArgs(options: BrowserLaunchArgumentOptions = {}): string[] {\n    // See https://github.com/GoogleChrome/chrome-launcher/blob/main/docs/chrome-flags-for-tools.md\n\n    const userDisabledFeatures = getFeatures(\n      '--disable-features',\n      options.args\n    );\n    if (options.args && userDisabledFeatures.length > 0) {\n      removeMatchingFlags(options.args, '--disable-features');\n    }\n\n    // Merge default disabled features with user-provided ones, if any.\n    const disabledFeatures = [\n      'Translate',\n      // AcceptCHFrame disabled because of crbug.com/1348106.\n      'AcceptCHFrame',\n      'MediaRouter',\n      'OptimizationHints',\n      // https://crbug.com/1492053\n      'ProcessPerSiteUpToMainFrameThreshold',\n      ...userDisabledFeatures,\n    ];\n\n    const userEnabledFeatures = getFeatures('--enable-features', options.args);\n    if (options.args && userEnabledFeatures.length > 0) {\n      removeMatchingFlags(options.args, '--enable-features');\n    }\n\n    // Merge default enabled features with user-provided ones, if any.\n    const enabledFeatures = [\n      'NetworkServiceInProcess2',\n      ...userEnabledFeatures,\n    ];\n\n    const chromeArguments = [\n      '--allow-pre-commit-input',\n      '--disable-background-networking',\n      '--disable-background-timer-throttling',\n      '--disable-backgrounding-occluded-windows',\n      '--disable-breakpad',\n      '--disable-client-side-phishing-detection',\n      '--disable-component-extensions-with-background-pages',\n      '--disable-component-update',\n      '--disable-default-apps',\n      '--disable-dev-shm-usage',\n      '--disable-extensions',\n      `--disable-features=${disabledFeatures.join(',')}`,\n      '--disable-hang-monitor',\n      '--disable-ipc-flooding-protection',\n      '--disable-popup-blocking',\n      '--disable-prompt-on-repost',\n      '--disable-renderer-backgrounding',\n      '--disable-search-engine-choice-screen',\n      '--disable-sync',\n      '--enable-automation',\n      // TODO(sadym): remove '--enable-blink-features=IdleDetection' once\n      // IdleDetection is turned on by default.\n      '--enable-blink-features=IdleDetection',\n      `--enable-features=${enabledFeatures.join(',')}`,\n      '--export-tagged-pdf',\n      '--force-color-profile=srgb',\n      '--metrics-recording-only',\n      '--no-first-run',\n      '--password-store=basic',\n      '--use-mock-keychain',\n    ];\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir,\n    } = options;\n    if (userDataDir) {\n      chromeArguments.push(`--user-data-dir=${path.resolve(userDataDir)}`);\n    }\n    if (devtools) {\n      chromeArguments.push('--auto-open-devtools-for-tabs');\n    }\n    if (headless) {\n      chromeArguments.push(\n        headless === 'new' ? '--headless=new' : '--headless',\n        '--hide-scrollbars',\n        '--mute-audio'\n      );\n    }\n    if (\n      args.every(arg => {\n        return arg.startsWith('-');\n      })\n    ) {\n      chromeArguments.push('about:blank');\n    }\n    chromeArguments.push(...args);\n    return chromeArguments;\n  }\n\n  override executablePath(channel?: ChromeReleaseChannel): string {\n    if (channel) {\n      return computeSystemExecutablePath({\n        browser: SupportedBrowsers.CHROME,\n        channel: convertPuppeteerChannelToBrowsersChannel(channel),\n      });\n    } else {\n      return this.resolveExecutablePath();\n    }\n  }\n}\n\nfunction convertPuppeteerChannelToBrowsersChannel(\n  channel: ChromeReleaseChannel\n): BrowsersChromeReleaseChannel {\n  switch (channel) {\n    case 'chrome':\n      return BrowsersChromeReleaseChannel.STABLE;\n    case 'chrome-dev':\n      return BrowsersChromeReleaseChannel.DEV;\n    case 'chrome-beta':\n      return BrowsersChromeReleaseChannel.BETA;\n    case 'chrome-canary':\n      return BrowsersChromeReleaseChannel.CANARY;\n  }\n}\n\n/**\n * Extracts all features from the given command-line flag\n * (e.g. `--enable-features`, `--enable-features=`).\n *\n * Example input:\n * [\"--enable-features=NetworkService,NetworkServiceInProcess\", \"--enable-features=Foo\"]\n *\n * Example output:\n * [\"NetworkService\", \"NetworkServiceInProcess\", \"Foo\"]\n *\n * @internal\n */\nexport function getFeatures(flag: string, options: string[] = []): string[] {\n  return options\n    .filter(s => {\n      return s.startsWith(flag.endsWith('=') ? flag : `${flag}=`);\n    })\n    .map(s => {\n      return s.split(new RegExp(`${flag}` + '=\\\\s*'))[1]?.trim();\n    })\n    .filter(s => {\n      return s;\n    }) as string[];\n}\n\n/**\n * Removes all elements in-place from the given string array\n * that match the given command-line flag.\n *\n * @internal\n */\nexport function removeMatchingFlags(array: string[], flag: string): string[] {\n  const regex = new RegExp(`^${flag}=.*`);\n  let i = 0;\n  while (i < array.length) {\n    if (regex.test(array[i]!)) {\n      array.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n  return array;\n}\n"]},"metadata":{},"sourceType":"module"}