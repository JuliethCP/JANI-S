{"ast":null,"code":"const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst codes = new Uint8Array(256);\nfor (let i = 0; i < alphabet.length; i++) {\n  codes[alphabet.charCodeAt(i)] = i;\n}\ncodes[/* - */0x2d] = 62;\ncodes[/* _ */0x5f] = 63;\nfunction byteLength(string) {\n  let len = string.length;\n  if (string.charCodeAt(len - 1) === 0x3d) len--;\n  if (len > 1 && string.charCodeAt(len - 1) === 0x3d) len--;\n  return len * 3 >>> 2;\n}\nfunction toString(buffer) {\n  const len = buffer.byteLength;\n  let result = '';\n  for (let i = 0; i < len; i += 3) {\n    result += alphabet[buffer[i] >> 2] + alphabet[(buffer[i] & 3) << 4 | buffer[i + 1] >> 4] + alphabet[(buffer[i + 1] & 15) << 2 | buffer[i + 2] >> 6] + alphabet[buffer[i + 2] & 63];\n  }\n  if (len % 3 === 2) {\n    result = result.substring(0, result.length - 1) + '=';\n  } else if (len % 3 === 1) {\n    result = result.substring(0, result.length - 2) + '==';\n  }\n  return result;\n}\n;\nfunction write(buffer, string) {\n  let offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let length = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : byteLength(string);\n  const len = Math.min(length, buffer.byteLength - offset);\n  for (let i = 0, j = 0; j < len; i += 4) {\n    const a = codes[string.charCodeAt(i)];\n    const b = codes[string.charCodeAt(i + 1)];\n    const c = codes[string.charCodeAt(i + 2)];\n    const d = codes[string.charCodeAt(i + 3)];\n    buffer[j++] = a << 2 | b >> 4;\n    buffer[j++] = (b & 15) << 4 | c >> 2;\n    buffer[j++] = (c & 3) << 6 | d & 63;\n  }\n  return len;\n}\n;\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n};","map":{"version":3,"names":["alphabet","codes","Uint8Array","i","length","charCodeAt","byteLength","string","len","toString","buffer","result","substring","write","offset","Math","min","j","a","b","c","d","module","exports"],"sources":["D:/Julieth-Campos/PSO/node_modules/b4a/lib/base64.js"],"sourcesContent":["const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\nconst codes = new Uint8Array(256)\n\nfor (let i = 0; i < alphabet.length; i++) {\n  codes[alphabet.charCodeAt(i)] = i\n}\n\ncodes[/* - */ 0x2d] = 62\ncodes[/* _ */ 0x5f] = 63\n\nfunction byteLength (string) {\n  let len = string.length\n\n  if (string.charCodeAt(len - 1) === 0x3d) len--\n  if (len > 1 && string.charCodeAt(len - 1) === 0x3d) len--\n\n  return (len * 3) >>> 2\n}\n\nfunction toString (buffer) {\n  const len = buffer.byteLength\n\n  let result = ''\n\n  for (let i = 0; i < len; i += 3) {\n    result += (\n      alphabet[buffer[i] >> 2] +\n      alphabet[((buffer[i] & 3) << 4) | (buffer[i + 1] >> 4)] +\n      alphabet[((buffer[i + 1] & 15) << 2) | (buffer[i + 2] >> 6)] +\n      alphabet[buffer[i + 2] & 63]\n    )\n  }\n\n  if (len % 3 === 2) {\n    result = result.substring(0, result.length - 1) + '='\n  } else if (len % 3 === 1) {\n    result = result.substring(0, result.length - 2) + '=='\n  }\n\n  return result\n};\n\nfunction write (buffer, string, offset = 0, length = byteLength(string)) {\n  const len = Math.min(length, buffer.byteLength - offset)\n\n  for (let i = 0, j = 0; j < len; i += 4) {\n    const a = codes[string.charCodeAt(i)]\n    const b = codes[string.charCodeAt(i + 1)]\n    const c = codes[string.charCodeAt(i + 2)]\n    const d = codes[string.charCodeAt(i + 3)]\n\n    buffer[j++] = (a << 2) | (b >> 4)\n    buffer[j++] = ((b & 15) << 4) | (c >> 2)\n    buffer[j++] = ((c & 3) << 6) | (d & 63)\n  }\n\n  return len\n};\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}