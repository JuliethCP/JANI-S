{"ast":null,"code":"'use strict';\n\nconst u = require('universalify').fromCallback;\nconst path = require('path');\nconst fs = require('graceful-fs');\nconst _mkdirs = require('../mkdirs');\nconst mkdirs = _mkdirs.mkdirs;\nconst mkdirsSync = _mkdirs.mkdirsSync;\nconst _symlinkPaths = require('./symlink-paths');\nconst symlinkPaths = _symlinkPaths.symlinkPaths;\nconst symlinkPathsSync = _symlinkPaths.symlinkPathsSync;\nconst _symlinkType = require('./symlink-type');\nconst symlinkType = _symlinkType.symlinkType;\nconst symlinkTypeSync = _symlinkType.symlinkTypeSync;\nconst pathExists = require('../path-exists').pathExists;\nfunction createSymlink(srcpath, dstpath, type, callback) {\n  callback = typeof type === 'function' ? type : callback;\n  type = typeof type === 'function' ? false : type;\n  pathExists(dstpath, (err, destinationExists) => {\n    if (err) return callback(err);\n    if (destinationExists) return callback(null);\n    symlinkPaths(srcpath, dstpath, (err, relative) => {\n      if (err) return callback(err);\n      srcpath = relative.toDst;\n      symlinkType(relative.toCwd, type, (err, type) => {\n        if (err) return callback(err);\n        const dir = path.dirname(dstpath);\n        pathExists(dir, (err, dirExists) => {\n          if (err) return callback(err);\n          if (dirExists) return fs.symlink(srcpath, dstpath, type, callback);\n          mkdirs(dir, err => {\n            if (err) return callback(err);\n            fs.symlink(srcpath, dstpath, type, callback);\n          });\n        });\n      });\n    });\n  });\n}\nfunction createSymlinkSync(srcpath, dstpath, type) {\n  const destinationExists = fs.existsSync(dstpath);\n  if (destinationExists) return undefined;\n  const relative = symlinkPathsSync(srcpath, dstpath);\n  srcpath = relative.toDst;\n  type = symlinkTypeSync(relative.toCwd, type);\n  const dir = path.dirname(dstpath);\n  const exists = fs.existsSync(dir);\n  if (exists) return fs.symlinkSync(srcpath, dstpath, type);\n  mkdirsSync(dir);\n  return fs.symlinkSync(srcpath, dstpath, type);\n}\nmodule.exports = {\n  createSymlink: u(createSymlink),\n  createSymlinkSync\n};","map":{"version":3,"names":["u","require","fromCallback","path","fs","_mkdirs","mkdirs","mkdirsSync","_symlinkPaths","symlinkPaths","symlinkPathsSync","_symlinkType","symlinkType","symlinkTypeSync","pathExists","createSymlink","srcpath","dstpath","type","callback","err","destinationExists","relative","toDst","toCwd","dir","dirname","dirExists","symlink","createSymlinkSync","existsSync","undefined","exists","symlinkSync","module","exports"],"sources":["D:/Julieth-Campos/PSO/node_modules/get-uri/node_modules/fs-extra/lib/ensure/symlink.js"],"sourcesContent":["'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst _mkdirs = require('../mkdirs')\nconst mkdirs = _mkdirs.mkdirs\nconst mkdirsSync = _mkdirs.mkdirsSync\n\nconst _symlinkPaths = require('./symlink-paths')\nconst symlinkPaths = _symlinkPaths.symlinkPaths\nconst symlinkPathsSync = _symlinkPaths.symlinkPathsSync\n\nconst _symlinkType = require('./symlink-type')\nconst symlinkType = _symlinkType.symlinkType\nconst symlinkTypeSync = _symlinkType.symlinkTypeSync\n\nconst pathExists = require('../path-exists').pathExists\n\nfunction createSymlink (srcpath, dstpath, type, callback) {\n  callback = (typeof type === 'function') ? type : callback\n  type = (typeof type === 'function') ? false : type\n\n  pathExists(dstpath, (err, destinationExists) => {\n    if (err) return callback(err)\n    if (destinationExists) return callback(null)\n    symlinkPaths(srcpath, dstpath, (err, relative) => {\n      if (err) return callback(err)\n      srcpath = relative.toDst\n      symlinkType(relative.toCwd, type, (err, type) => {\n        if (err) return callback(err)\n        const dir = path.dirname(dstpath)\n        pathExists(dir, (err, dirExists) => {\n          if (err) return callback(err)\n          if (dirExists) return fs.symlink(srcpath, dstpath, type, callback)\n          mkdirs(dir, err => {\n            if (err) return callback(err)\n            fs.symlink(srcpath, dstpath, type, callback)\n          })\n        })\n      })\n    })\n  })\n}\n\nfunction createSymlinkSync (srcpath, dstpath, type) {\n  const destinationExists = fs.existsSync(dstpath)\n  if (destinationExists) return undefined\n\n  const relative = symlinkPathsSync(srcpath, dstpath)\n  srcpath = relative.toDst\n  type = symlinkTypeSync(relative.toCwd, type)\n  const dir = path.dirname(dstpath)\n  const exists = fs.existsSync(dir)\n  if (exists) return fs.symlinkSync(srcpath, dstpath, type)\n  mkdirsSync(dir)\n  return fs.symlinkSync(srcpath, dstpath, type)\n}\n\nmodule.exports = {\n  createSymlink: u(createSymlink),\n  createSymlinkSync\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}