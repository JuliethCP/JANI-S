{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = highlight;\nexports.getChalk = getChalk;\nexports.shouldHighlight = shouldHighlight;\nvar _jsTokens = require(\"js-tokens\");\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\nvar _chalk = require(\"chalk\");\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.slice(offset - 2, offset) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n    return token.type;\n  };\n  tokenize = function* (text) {\n    let match;\n    while (match = _jsTokens.default.exec(text)) {\n      const token = _jsTokens.matchToToken(match);\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n  return highlighted;\n}\nfunction shouldHighlight(options) {\n  return !!_chalk.supportsColor || options.forceColor;\n}\nfunction getChalk(options) {\n  return options.forceColor ? new _chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : _chalk;\n}\nfunction highlight(code) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (code !== \"\" && shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","highlight","getChalk","shouldHighlight","_jsTokens","require","_helperValidatorIdentifier","_chalk","sometimesKeywords","Set","getDefs","chalk","keyword","cyan","capitalized","yellow","jsxIdentifier","punctuator","number","magenta","string","green","regex","comment","grey","invalid","white","bgRed","bold","NEWLINE","BRACKET","tokenize","JSX_TAG","getTokenType","token","offset","text","type","isKeyword","isStrictReservedWord","has","test","slice","toLowerCase","match","exec","matchToToken","index","highlightTokens","defs","highlighted","colorize","split","map","str","join","options","supportsColor","forceColor","constructor","enabled","level","code"],"sources":["D:/Julieth-Campos/PSO/node_modules/@babel/highlight/lib/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = highlight;\nexports.getChalk = getChalk;\nexports.shouldHighlight = shouldHighlight;\n\nvar _jsTokens = require(\"js-tokens\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.slice(offset - 2, offset) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = _jsTokens.default.exec(text)) {\n      const token = _jsTokens.matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!_chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new _chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : _chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (code !== \"\" && shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}