{"ast":null,"code":"/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Asserts that the given value is truthy.\n * @param value - some conditional statement\n * @param message - the error message to throw if the value is not truthy.\n *\n * @internal\n */\nexport const assert = (value, message) => {\n  if (!value) {\n    throw new Error(message);\n  }\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA;;;;;;;AAOA,OAAO,MAAMA,MAAM,GAAwD,CACzEC,KAAK,EACLC,OAAO,KACL;EACF,IAAI,CAACD,KAAK,EAAE;IACV,MAAM,IAAIE,KAAK,CAACD,OAAO,CAAC;;AAE5B,CAAC","names":["assert","value","message","Error"],"sources":["D:\\Julieth-Campos\\PSO\\node_modules\\puppeteer-core\\src\\util\\assert.ts"],"sourcesContent":["/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Asserts that the given value is truthy.\n * @param value - some conditional statement\n * @param message - the error message to throw if the value is not truthy.\n *\n * @internal\n */\nexport const assert: (value: unknown, message?: string) => asserts value = (\n  value,\n  message\n) => {\n  if (!value) {\n    throw new Error(message);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}