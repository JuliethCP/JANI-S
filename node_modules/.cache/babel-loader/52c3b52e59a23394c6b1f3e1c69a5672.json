{"ast":null,"code":"var Stream = require('stream');\n\n// through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\nexports = module.exports = through;\nthrough.through = through;\n\n//create a readable writable stream.\n\nfunction through(write, end, opts) {\n  write = write || function (data) {\n    this.queue(data);\n  };\n  end = end || function () {\n    this.queue(null);\n  };\n  var ended = false,\n    destroyed = false,\n    buffer = [],\n    _ended = false;\n  var stream = new Stream();\n  stream.readable = stream.writable = true;\n  stream.paused = false;\n\n  //  stream.autoPause   = !(opts && opts.autoPause   === false)\n  stream.autoDestroy = !(opts && opts.autoDestroy === false);\n  stream.write = function (data) {\n    write.call(this, data);\n    return !stream.paused;\n  };\n  function drain() {\n    while (buffer.length && !stream.paused) {\n      var data = buffer.shift();\n      if (null === data) return stream.emit('end');else stream.emit('data', data);\n    }\n  }\n  stream.queue = stream.push = function (data) {\n    //    console.error(ended)\n    if (_ended) return stream;\n    if (data === null) _ended = true;\n    buffer.push(data);\n    drain();\n    return stream;\n  };\n\n  //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here.\n  //this is only a problem if end is not emitted synchronously.\n  //a nicer way to do this is to make sure this is the last listener for 'end'\n\n  stream.on('end', function () {\n    stream.readable = false;\n    if (!stream.writable && stream.autoDestroy) process.nextTick(function () {\n      stream.destroy();\n    });\n  });\n  function _end() {\n    stream.writable = false;\n    end.call(stream);\n    if (!stream.readable && stream.autoDestroy) stream.destroy();\n  }\n  stream.end = function (data) {\n    if (ended) return;\n    ended = true;\n    if (arguments.length) stream.write(data);\n    _end(); // will emit or queue\n    return stream;\n  };\n  stream.destroy = function () {\n    if (destroyed) return;\n    destroyed = true;\n    ended = true;\n    buffer.length = 0;\n    stream.writable = stream.readable = false;\n    stream.emit('close');\n    return stream;\n  };\n  stream.pause = function () {\n    if (stream.paused) return;\n    stream.paused = true;\n    return stream;\n  };\n  stream.resume = function () {\n    if (stream.paused) {\n      stream.paused = false;\n      stream.emit('resume');\n    }\n    drain();\n    //may have become paused again,\n    //as drain emits 'data'.\n    if (!stream.paused) stream.emit('drain');\n    return stream;\n  };\n  return stream;\n}","map":{"version":3,"names":["Stream","require","exports","module","through","write","end","opts","data","queue","ended","destroyed","buffer","_ended","stream","readable","writable","paused","autoDestroy","call","drain","length","shift","emit","push","on","process","nextTick","destroy","_end","arguments","pause","resume"],"sources":["D:/Julieth-Campos/PSO/node_modules/through/index.js"],"sourcesContent":["var Stream = require('stream')\n\n// through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\nexports = module.exports = through\nthrough.through = through\n\n//create a readable writable stream.\n\nfunction through (write, end, opts) {\n  write = write || function (data) { this.queue(data) }\n  end = end || function () { this.queue(null) }\n\n  var ended = false, destroyed = false, buffer = [], _ended = false\n  var stream = new Stream()\n  stream.readable = stream.writable = true\n  stream.paused = false\n\n//  stream.autoPause   = !(opts && opts.autoPause   === false)\n  stream.autoDestroy = !(opts && opts.autoDestroy === false)\n\n  stream.write = function (data) {\n    write.call(this, data)\n    return !stream.paused\n  }\n\n  function drain() {\n    while(buffer.length && !stream.paused) {\n      var data = buffer.shift()\n      if(null === data)\n        return stream.emit('end')\n      else\n        stream.emit('data', data)\n    }\n  }\n\n  stream.queue = stream.push = function (data) {\n//    console.error(ended)\n    if(_ended) return stream\n    if(data === null) _ended = true\n    buffer.push(data)\n    drain()\n    return stream\n  }\n\n  //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here.\n  //this is only a problem if end is not emitted synchronously.\n  //a nicer way to do this is to make sure this is the last listener for 'end'\n\n  stream.on('end', function () {\n    stream.readable = false\n    if(!stream.writable && stream.autoDestroy)\n      process.nextTick(function () {\n        stream.destroy()\n      })\n  })\n\n  function _end () {\n    stream.writable = false\n    end.call(stream)\n    if(!stream.readable && stream.autoDestroy)\n      stream.destroy()\n  }\n\n  stream.end = function (data) {\n    if(ended) return\n    ended = true\n    if(arguments.length) stream.write(data)\n    _end() // will emit or queue\n    return stream\n  }\n\n  stream.destroy = function () {\n    if(destroyed) return\n    destroyed = true\n    ended = true\n    buffer.length = 0\n    stream.writable = stream.readable = false\n    stream.emit('close')\n    return stream\n  }\n\n  stream.pause = function () {\n    if(stream.paused) return\n    stream.paused = true\n    return stream\n  }\n\n  stream.resume = function () {\n    if(stream.paused) {\n      stream.paused = false\n      stream.emit('resume')\n    }\n    drain()\n    //may have become paused again,\n    //as drain emits 'data'.\n    if(!stream.paused)\n      stream.emit('drain')\n    return stream\n  }\n  return stream\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}