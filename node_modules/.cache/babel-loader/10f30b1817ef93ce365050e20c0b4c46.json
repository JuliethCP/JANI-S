{"ast":null,"code":"'use strict';\n\nimport { notStrictEqual, strictEqual } from 'assert';\nimport cliui from 'cliui';\nimport escalade from 'escalade/sync';\nimport { inspect } from 'util';\nimport { readFileSync } from 'fs';\nimport { fileURLToPath } from 'url';\nimport Parser from 'yargs-parser';\nimport { basename, dirname, extname, relative, resolve } from 'path';\nimport { getProcessArgvBin } from '../../build/lib/utils/process-argv.js';\nimport { YError } from '../../build/lib/yerror.js';\nimport y18n from 'y18n';\nconst REQUIRE_ERROR = 'require is not supported by ESM';\nconst REQUIRE_DIRECTORY_ERROR = 'loading a directory of commands is not supported yet for ESM';\nlet __dirname;\ntry {\n  __dirname = fileURLToPath(import.meta.url);\n} catch (e) {\n  __dirname = process.cwd();\n}\nconst mainFilename = __dirname.substring(0, __dirname.lastIndexOf('node_modules'));\nexport default {\n  assert: {\n    notStrictEqual,\n    strictEqual\n  },\n  cliui,\n  findUp: escalade,\n  getEnv: key => {\n    return process.env[key];\n  },\n  inspect,\n  getCallerFile: () => {\n    throw new YError(REQUIRE_DIRECTORY_ERROR);\n  },\n  getProcessArgvBin,\n  mainFilename: mainFilename || process.cwd(),\n  Parser,\n  path: {\n    basename,\n    dirname,\n    extname,\n    relative,\n    resolve\n  },\n  process: {\n    argv: () => process.argv,\n    cwd: process.cwd,\n    emitWarning: (warning, type) => process.emitWarning(warning, type),\n    execPath: () => process.execPath,\n    exit: process.exit,\n    nextTick: process.nextTick,\n    stdColumns: typeof process.stdout.columns !== 'undefined' ? process.stdout.columns : null\n  },\n  readFileSync,\n  require: () => {\n    throw new YError(REQUIRE_ERROR);\n  },\n  requireDirectory: () => {\n    throw new YError(REQUIRE_DIRECTORY_ERROR);\n  },\n  stringWidth: str => {\n    return [...str].length;\n  },\n  y18n: y18n({\n    directory: resolve(__dirname, '../../../locales'),\n    updateFiles: false\n  })\n};","map":{"version":3,"names":["notStrictEqual","strictEqual","cliui","escalade","inspect","readFileSync","fileURLToPath","Parser","basename","dirname","extname","relative","resolve","getProcessArgvBin","YError","y18n","REQUIRE_ERROR","REQUIRE_DIRECTORY_ERROR","__dirname","import","meta","url","e","process","cwd","mainFilename","substring","lastIndexOf","assert","findUp","getEnv","key","env","getCallerFile","path","argv","emitWarning","warning","type","execPath","exit","nextTick","stdColumns","stdout","columns","require","requireDirectory","stringWidth","str","length","directory","updateFiles"],"sources":["D:/Julieth-Campos/PSO/node_modules/@puppeteer/browsers/node_modules/yargs/lib/platform-shims/esm.mjs"],"sourcesContent":["'use strict'\n\nimport { notStrictEqual, strictEqual } from 'assert'\nimport cliui from 'cliui'\nimport escalade from 'escalade/sync'\nimport { inspect } from 'util'\nimport { readFileSync } from 'fs'\nimport { fileURLToPath } from 'url';\nimport Parser from 'yargs-parser'\nimport { basename, dirname, extname, relative, resolve } from 'path'\nimport { getProcessArgvBin } from '../../build/lib/utils/process-argv.js'\nimport { YError } from '../../build/lib/yerror.js'\nimport y18n from 'y18n'\n\nconst REQUIRE_ERROR = 'require is not supported by ESM'\nconst REQUIRE_DIRECTORY_ERROR = 'loading a directory of commands is not supported yet for ESM'\n\nlet __dirname;\ntry {\n  __dirname = fileURLToPath(import.meta.url);\n} catch (e) {\n  __dirname = process.cwd();\n}\nconst mainFilename = __dirname.substring(0, __dirname.lastIndexOf('node_modules'));\n\nexport default {\n  assert: {\n    notStrictEqual,\n    strictEqual\n  },\n  cliui,\n  findUp: escalade,\n  getEnv: (key) => {\n    return process.env[key]\n  },\n  inspect,\n  getCallerFile: () => {\n    throw new YError(REQUIRE_DIRECTORY_ERROR)\n  },\n  getProcessArgvBin,\n  mainFilename: mainFilename || process.cwd(),\n  Parser,\n  path: {\n    basename,\n    dirname,\n    extname,\n    relative,\n    resolve\n  },\n  process: {\n    argv: () => process.argv,\n    cwd: process.cwd,\n    emitWarning: (warning, type) => process.emitWarning(warning, type),\n    execPath: () => process.execPath,\n    exit: process.exit,\n    nextTick: process.nextTick,\n    stdColumns: typeof process.stdout.columns !== 'undefined' ? process.stdout.columns : null\n  },\n  readFileSync,\n  require: () => {\n    throw new YError(REQUIRE_ERROR)\n  },\n  requireDirectory: () => {\n    throw new YError(REQUIRE_DIRECTORY_ERROR)\n  },\n  stringWidth: (str) => {\n    return [...str].length\n  },\n  y18n: y18n({\n    directory: resolve(__dirname, '../../../locales'),\n    updateFiles: false\n  })\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,cAAc,EAAEC,WAAW,QAAQ,QAAQ;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,eAAe;AACpC,SAASC,OAAO,QAAQ,MAAM;AAC9B,SAASC,YAAY,QAAQ,IAAI;AACjC,SAASC,aAAa,QAAQ,KAAK;AACnC,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,QAAQ,EAAEC,OAAO,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,MAAM;AACpE,SAASC,iBAAiB,QAAQ,uCAAuC;AACzE,SAASC,MAAM,QAAQ,2BAA2B;AAClD,OAAOC,IAAI,MAAM,MAAM;AAEvB,MAAMC,aAAa,GAAG,iCAAiC;AACvD,MAAMC,uBAAuB,GAAG,8DAA8D;AAE9F,IAAIC,SAAS;AACb,IAAI;EACFA,SAAS,GAAGZ,aAAa,CAACa,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC;AAC5C,CAAC,CAAC,OAAOC,CAAC,EAAE;EACVJ,SAAS,GAAGK,OAAO,CAACC,GAAG,EAAE;AAC3B;AACA,MAAMC,YAAY,GAAGP,SAAS,CAACQ,SAAS,CAAC,CAAC,EAAER,SAAS,CAACS,WAAW,CAAC,cAAc,CAAC,CAAC;AAElF,eAAe;EACbC,MAAM,EAAE;IACN5B,cAAc;IACdC;EACF,CAAC;EACDC,KAAK;EACL2B,MAAM,EAAE1B,QAAQ;EAChB2B,MAAM,EAAGC,GAAG,IAAK;IACf,OAAOR,OAAO,CAACS,GAAG,CAACD,GAAG,CAAC;EACzB,CAAC;EACD3B,OAAO;EACP6B,aAAa,EAAE,MAAM;IACnB,MAAM,IAAInB,MAAM,CAACG,uBAAuB,CAAC;EAC3C,CAAC;EACDJ,iBAAiB;EACjBY,YAAY,EAAEA,YAAY,IAAIF,OAAO,CAACC,GAAG,EAAE;EAC3CjB,MAAM;EACN2B,IAAI,EAAE;IACJ1B,QAAQ;IACRC,OAAO;IACPC,OAAO;IACPC,QAAQ;IACRC;EACF,CAAC;EACDW,OAAO,EAAE;IACPY,IAAI,EAAE,MAAMZ,OAAO,CAACY,IAAI;IACxBX,GAAG,EAAED,OAAO,CAACC,GAAG;IAChBY,WAAW,EAAE,CAACC,OAAO,EAAEC,IAAI,KAAKf,OAAO,CAACa,WAAW,CAACC,OAAO,EAAEC,IAAI,CAAC;IAClEC,QAAQ,EAAE,MAAMhB,OAAO,CAACgB,QAAQ;IAChCC,IAAI,EAAEjB,OAAO,CAACiB,IAAI;IAClBC,QAAQ,EAAElB,OAAO,CAACkB,QAAQ;IAC1BC,UAAU,EAAE,OAAOnB,OAAO,CAACoB,MAAM,CAACC,OAAO,KAAK,WAAW,GAAGrB,OAAO,CAACoB,MAAM,CAACC,OAAO,GAAG;EACvF,CAAC;EACDvC,YAAY;EACZwC,OAAO,EAAE,MAAM;IACb,MAAM,IAAI/B,MAAM,CAACE,aAAa,CAAC;EACjC,CAAC;EACD8B,gBAAgB,EAAE,MAAM;IACtB,MAAM,IAAIhC,MAAM,CAACG,uBAAuB,CAAC;EAC3C,CAAC;EACD8B,WAAW,EAAGC,GAAG,IAAK;IACpB,OAAO,CAAC,GAAGA,GAAG,CAAC,CAACC,MAAM;EACxB,CAAC;EACDlC,IAAI,EAAEA,IAAI,CAAC;IACTmC,SAAS,EAAEtC,OAAO,CAACM,SAAS,EAAE,kBAAkB,CAAC;IACjDiC,WAAW,EAAE;EACf,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}