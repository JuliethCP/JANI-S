{"ast":null,"code":"\"use strict\";\n\n;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar es7_1 = tslib_1.__importDefault(require(\"./es7\"));\nvar type_annotations_1 = tslib_1.__importDefault(require(\"./type-annotations\"));\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\nfunction default_1(fork) {\n  fork.use(es7_1.default);\n  fork.use(type_annotations_1.default);\n  var types = fork.use(types_1.default);\n  var def = types.Type.def;\n  var or = types.Type.or;\n  var defaults = fork.use(shared_1.default).defaults;\n  // Base types\n  def(\"Flow\").bases(\"Node\");\n  def(\"FlowType\").bases(\"Flow\");\n  // Type annotations\n  def(\"AnyTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"EmptyTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"MixedTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"VoidTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"NumberTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"NumberLiteralTypeAnnotation\").bases(\"FlowType\").build(\"value\", \"raw\").field(\"value\", Number).field(\"raw\", String);\n  // Babylon 6 differs in AST from Flow\n  // same as NumberLiteralTypeAnnotation\n  def(\"NumericLiteralTypeAnnotation\").bases(\"FlowType\").build(\"value\", \"raw\").field(\"value\", Number).field(\"raw\", String);\n  def(\"StringTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"StringLiteralTypeAnnotation\").bases(\"FlowType\").build(\"value\", \"raw\").field(\"value\", String).field(\"raw\", String);\n  def(\"BooleanTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"BooleanLiteralTypeAnnotation\").bases(\"FlowType\").build(\"value\", \"raw\").field(\"value\", Boolean).field(\"raw\", String);\n  def(\"TypeAnnotation\").bases(\"Node\").build(\"typeAnnotation\").field(\"typeAnnotation\", def(\"FlowType\"));\n  def(\"NullableTypeAnnotation\").bases(\"FlowType\").build(\"typeAnnotation\").field(\"typeAnnotation\", def(\"FlowType\"));\n  def(\"NullLiteralTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"NullTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"ThisTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"ExistsTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"ExistentialTypeParam\").bases(\"FlowType\").build();\n  def(\"FunctionTypeAnnotation\").bases(\"FlowType\").build(\"params\", \"returnType\", \"rest\", \"typeParameters\").field(\"params\", [def(\"FunctionTypeParam\")]).field(\"returnType\", def(\"FlowType\")).field(\"rest\", or(def(\"FunctionTypeParam\"), null)).field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null));\n  def(\"FunctionTypeParam\").bases(\"Node\").build(\"name\", \"typeAnnotation\", \"optional\").field(\"name\", def(\"Identifier\")).field(\"typeAnnotation\", def(\"FlowType\")).field(\"optional\", Boolean);\n  def(\"ArrayTypeAnnotation\").bases(\"FlowType\").build(\"elementType\").field(\"elementType\", def(\"FlowType\"));\n  def(\"ObjectTypeAnnotation\").bases(\"FlowType\").build(\"properties\", \"indexers\", \"callProperties\").field(\"properties\", [or(def(\"ObjectTypeProperty\"), def(\"ObjectTypeSpreadProperty\"))]).field(\"indexers\", [def(\"ObjectTypeIndexer\")], defaults.emptyArray).field(\"callProperties\", [def(\"ObjectTypeCallProperty\")], defaults.emptyArray).field(\"inexact\", or(Boolean, void 0), defaults[\"undefined\"]).field(\"exact\", Boolean, defaults[\"false\"]).field(\"internalSlots\", [def(\"ObjectTypeInternalSlot\")], defaults.emptyArray);\n  def(\"Variance\").bases(\"Node\").build(\"kind\").field(\"kind\", or(\"plus\", \"minus\"));\n  var LegacyVariance = or(def(\"Variance\"), \"plus\", \"minus\", null);\n  def(\"ObjectTypeProperty\").bases(\"Node\").build(\"key\", \"value\", \"optional\").field(\"key\", or(def(\"Literal\"), def(\"Identifier\"))).field(\"value\", def(\"FlowType\")).field(\"optional\", Boolean).field(\"variance\", LegacyVariance, defaults[\"null\"]);\n  def(\"ObjectTypeIndexer\").bases(\"Node\").build(\"id\", \"key\", \"value\").field(\"id\", def(\"Identifier\")).field(\"key\", def(\"FlowType\")).field(\"value\", def(\"FlowType\")).field(\"variance\", LegacyVariance, defaults[\"null\"]);\n  def(\"ObjectTypeCallProperty\").bases(\"Node\").build(\"value\").field(\"value\", def(\"FunctionTypeAnnotation\")).field(\"static\", Boolean, defaults[\"false\"]);\n  def(\"QualifiedTypeIdentifier\").bases(\"Node\").build(\"qualification\", \"id\").field(\"qualification\", or(def(\"Identifier\"), def(\"QualifiedTypeIdentifier\"))).field(\"id\", def(\"Identifier\"));\n  def(\"GenericTypeAnnotation\").bases(\"FlowType\").build(\"id\", \"typeParameters\").field(\"id\", or(def(\"Identifier\"), def(\"QualifiedTypeIdentifier\"))).field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null));\n  def(\"MemberTypeAnnotation\").bases(\"FlowType\").build(\"object\", \"property\").field(\"object\", def(\"Identifier\")).field(\"property\", or(def(\"MemberTypeAnnotation\"), def(\"GenericTypeAnnotation\")));\n  def(\"UnionTypeAnnotation\").bases(\"FlowType\").build(\"types\").field(\"types\", [def(\"FlowType\")]);\n  def(\"IntersectionTypeAnnotation\").bases(\"FlowType\").build(\"types\").field(\"types\", [def(\"FlowType\")]);\n  def(\"TypeofTypeAnnotation\").bases(\"FlowType\").build(\"argument\").field(\"argument\", def(\"FlowType\"));\n  def(\"ObjectTypeSpreadProperty\").bases(\"Node\").build(\"argument\").field(\"argument\", def(\"FlowType\"));\n  def(\"ObjectTypeInternalSlot\").bases(\"Node\").build(\"id\", \"value\", \"optional\", \"static\", \"method\").field(\"id\", def(\"Identifier\")).field(\"value\", def(\"FlowType\")).field(\"optional\", Boolean).field(\"static\", Boolean).field(\"method\", Boolean);\n  def(\"TypeParameterDeclaration\").bases(\"Node\").build(\"params\").field(\"params\", [def(\"TypeParameter\")]);\n  def(\"TypeParameterInstantiation\").bases(\"Node\").build(\"params\").field(\"params\", [def(\"FlowType\")]);\n  def(\"TypeParameter\").bases(\"FlowType\").build(\"name\", \"variance\", \"bound\").field(\"name\", String).field(\"variance\", LegacyVariance, defaults[\"null\"]).field(\"bound\", or(def(\"TypeAnnotation\"), null), defaults[\"null\"]);\n  def(\"ClassProperty\").field(\"variance\", LegacyVariance, defaults[\"null\"]);\n  def(\"ClassImplements\").bases(\"Node\").build(\"id\").field(\"id\", def(\"Identifier\")).field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"]).field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null), defaults[\"null\"]);\n  def(\"InterfaceTypeAnnotation\").bases(\"FlowType\").build(\"body\", \"extends\").field(\"body\", def(\"ObjectTypeAnnotation\")).field(\"extends\", or([def(\"InterfaceExtends\")], null), defaults[\"null\"]);\n  def(\"InterfaceDeclaration\").bases(\"Declaration\").build(\"id\", \"body\", \"extends\").field(\"id\", def(\"Identifier\")).field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null), defaults[\"null\"]).field(\"body\", def(\"ObjectTypeAnnotation\")).field(\"extends\", [def(\"InterfaceExtends\")]);\n  def(\"DeclareInterface\").bases(\"InterfaceDeclaration\").build(\"id\", \"body\", \"extends\");\n  def(\"InterfaceExtends\").bases(\"Node\").build(\"id\").field(\"id\", def(\"Identifier\")).field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null), defaults[\"null\"]);\n  def(\"TypeAlias\").bases(\"Declaration\").build(\"id\", \"typeParameters\", \"right\").field(\"id\", def(\"Identifier\")).field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null)).field(\"right\", def(\"FlowType\"));\n  def(\"OpaqueType\").bases(\"Declaration\").build(\"id\", \"typeParameters\", \"impltype\", \"supertype\").field(\"id\", def(\"Identifier\")).field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null)).field(\"impltype\", def(\"FlowType\")).field(\"supertype\", def(\"FlowType\"));\n  def(\"DeclareTypeAlias\").bases(\"TypeAlias\").build(\"id\", \"typeParameters\", \"right\");\n  def(\"DeclareOpaqueType\").bases(\"TypeAlias\").build(\"id\", \"typeParameters\", \"supertype\");\n  def(\"TypeCastExpression\").bases(\"Expression\").build(\"expression\", \"typeAnnotation\").field(\"expression\", def(\"Expression\")).field(\"typeAnnotation\", def(\"TypeAnnotation\"));\n  def(\"TupleTypeAnnotation\").bases(\"FlowType\").build(\"types\").field(\"types\", [def(\"FlowType\")]);\n  def(\"DeclareVariable\").bases(\"Statement\").build(\"id\").field(\"id\", def(\"Identifier\"));\n  def(\"DeclareFunction\").bases(\"Statement\").build(\"id\").field(\"id\", def(\"Identifier\"));\n  def(\"DeclareClass\").bases(\"InterfaceDeclaration\").build(\"id\");\n  def(\"DeclareModule\").bases(\"Statement\").build(\"id\", \"body\").field(\"id\", or(def(\"Identifier\"), def(\"Literal\"))).field(\"body\", def(\"BlockStatement\"));\n  def(\"DeclareModuleExports\").bases(\"Statement\").build(\"typeAnnotation\").field(\"typeAnnotation\", def(\"TypeAnnotation\"));\n  def(\"DeclareExportDeclaration\").bases(\"Declaration\").build(\"default\", \"declaration\", \"specifiers\", \"source\").field(\"default\", Boolean).field(\"declaration\", or(def(\"DeclareVariable\"), def(\"DeclareFunction\"), def(\"DeclareClass\"), def(\"FlowType\"),\n  // Implies default.\n  null)).field(\"specifiers\", [or(def(\"ExportSpecifier\"), def(\"ExportBatchSpecifier\"))], defaults.emptyArray).field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n  def(\"DeclareExportAllDeclaration\").bases(\"Declaration\").build(\"source\").field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n  def(\"FlowPredicate\").bases(\"Flow\");\n  def(\"InferredPredicate\").bases(\"FlowPredicate\").build();\n  def(\"DeclaredPredicate\").bases(\"FlowPredicate\").build(\"value\").field(\"value\", def(\"Expression\"));\n  def(\"CallExpression\").field(\"typeArguments\", or(null, def(\"TypeParameterInstantiation\")), defaults[\"null\"]);\n  def(\"NewExpression\").field(\"typeArguments\", or(null, def(\"TypeParameterInstantiation\")), defaults[\"null\"]);\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];","map":{"version":3,"names":["Object","defineProperty","exports","value","tslib_1","require","es7_1","__importDefault","type_annotations_1","types_1","shared_1","default_1","fork","use","default","types","def","Type","or","defaults","bases","build","field","Number","String","Boolean","emptyArray","LegacyVariance","module"],"sources":["D:/Julieth-Campos/PSO/node_modules/ast-types/def/flow.js"],"sourcesContent":["\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es7_1 = tslib_1.__importDefault(require(\"./es7\"));\nvar type_annotations_1 = tslib_1.__importDefault(require(\"./type-annotations\"));\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    fork.use(es7_1.default);\n    fork.use(type_annotations_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    // Base types\n    def(\"Flow\").bases(\"Node\");\n    def(\"FlowType\").bases(\"Flow\");\n    // Type annotations\n    def(\"AnyTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"EmptyTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"MixedTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"VoidTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"NumberTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"NumberLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", Number)\n        .field(\"raw\", String);\n    // Babylon 6 differs in AST from Flow\n    // same as NumberLiteralTypeAnnotation\n    def(\"NumericLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", Number)\n        .field(\"raw\", String);\n    def(\"StringTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"StringLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", String)\n        .field(\"raw\", String);\n    def(\"BooleanTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"BooleanLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", Boolean)\n        .field(\"raw\", String);\n    def(\"TypeAnnotation\")\n        .bases(\"Node\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"FlowType\"));\n    def(\"NullableTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"FlowType\"));\n    def(\"NullLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"NullTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"ThisTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"ExistsTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"ExistentialTypeParam\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"FunctionTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"params\", \"returnType\", \"rest\", \"typeParameters\")\n        .field(\"params\", [def(\"FunctionTypeParam\")])\n        .field(\"returnType\", def(\"FlowType\"))\n        .field(\"rest\", or(def(\"FunctionTypeParam\"), null))\n        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null));\n    def(\"FunctionTypeParam\")\n        .bases(\"Node\")\n        .build(\"name\", \"typeAnnotation\", \"optional\")\n        .field(\"name\", def(\"Identifier\"))\n        .field(\"typeAnnotation\", def(\"FlowType\"))\n        .field(\"optional\", Boolean);\n    def(\"ArrayTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"elementType\")\n        .field(\"elementType\", def(\"FlowType\"));\n    def(\"ObjectTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"properties\", \"indexers\", \"callProperties\")\n        .field(\"properties\", [\n        or(def(\"ObjectTypeProperty\"), def(\"ObjectTypeSpreadProperty\"))\n    ])\n        .field(\"indexers\", [def(\"ObjectTypeIndexer\")], defaults.emptyArray)\n        .field(\"callProperties\", [def(\"ObjectTypeCallProperty\")], defaults.emptyArray)\n        .field(\"inexact\", or(Boolean, void 0), defaults[\"undefined\"])\n        .field(\"exact\", Boolean, defaults[\"false\"])\n        .field(\"internalSlots\", [def(\"ObjectTypeInternalSlot\")], defaults.emptyArray);\n    def(\"Variance\")\n        .bases(\"Node\")\n        .build(\"kind\")\n        .field(\"kind\", or(\"plus\", \"minus\"));\n    var LegacyVariance = or(def(\"Variance\"), \"plus\", \"minus\", null);\n    def(\"ObjectTypeProperty\")\n        .bases(\"Node\")\n        .build(\"key\", \"value\", \"optional\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\")))\n        .field(\"value\", def(\"FlowType\"))\n        .field(\"optional\", Boolean)\n        .field(\"variance\", LegacyVariance, defaults[\"null\"]);\n    def(\"ObjectTypeIndexer\")\n        .bases(\"Node\")\n        .build(\"id\", \"key\", \"value\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"key\", def(\"FlowType\"))\n        .field(\"value\", def(\"FlowType\"))\n        .field(\"variance\", LegacyVariance, defaults[\"null\"]);\n    def(\"ObjectTypeCallProperty\")\n        .bases(\"Node\")\n        .build(\"value\")\n        .field(\"value\", def(\"FunctionTypeAnnotation\"))\n        .field(\"static\", Boolean, defaults[\"false\"]);\n    def(\"QualifiedTypeIdentifier\")\n        .bases(\"Node\")\n        .build(\"qualification\", \"id\")\n        .field(\"qualification\", or(def(\"Identifier\"), def(\"QualifiedTypeIdentifier\")))\n        .field(\"id\", def(\"Identifier\"));\n    def(\"GenericTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"id\", \"typeParameters\")\n        .field(\"id\", or(def(\"Identifier\"), def(\"QualifiedTypeIdentifier\")))\n        .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null));\n    def(\"MemberTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"object\", \"property\")\n        .field(\"object\", def(\"Identifier\"))\n        .field(\"property\", or(def(\"MemberTypeAnnotation\"), def(\"GenericTypeAnnotation\")));\n    def(\"UnionTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"types\")\n        .field(\"types\", [def(\"FlowType\")]);\n    def(\"IntersectionTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"types\")\n        .field(\"types\", [def(\"FlowType\")]);\n    def(\"TypeofTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"FlowType\"));\n    def(\"ObjectTypeSpreadProperty\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"FlowType\"));\n    def(\"ObjectTypeInternalSlot\")\n        .bases(\"Node\")\n        .build(\"id\", \"value\", \"optional\", \"static\", \"method\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"value\", def(\"FlowType\"))\n        .field(\"optional\", Boolean)\n        .field(\"static\", Boolean)\n        .field(\"method\", Boolean);\n    def(\"TypeParameterDeclaration\")\n        .bases(\"Node\")\n        .build(\"params\")\n        .field(\"params\", [def(\"TypeParameter\")]);\n    def(\"TypeParameterInstantiation\")\n        .bases(\"Node\")\n        .build(\"params\")\n        .field(\"params\", [def(\"FlowType\")]);\n    def(\"TypeParameter\")\n        .bases(\"FlowType\")\n        .build(\"name\", \"variance\", \"bound\")\n        .field(\"name\", String)\n        .field(\"variance\", LegacyVariance, defaults[\"null\"])\n        .field(\"bound\", or(def(\"TypeAnnotation\"), null), defaults[\"null\"]);\n    def(\"ClassProperty\")\n        .field(\"variance\", LegacyVariance, defaults[\"null\"]);\n    def(\"ClassImplements\")\n        .bases(\"Node\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"])\n        .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null), defaults[\"null\"]);\n    def(\"InterfaceTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"body\", \"extends\")\n        .field(\"body\", def(\"ObjectTypeAnnotation\"))\n        .field(\"extends\", or([def(\"InterfaceExtends\")], null), defaults[\"null\"]);\n    def(\"InterfaceDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"body\", \"extends\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null), defaults[\"null\"])\n        .field(\"body\", def(\"ObjectTypeAnnotation\"))\n        .field(\"extends\", [def(\"InterfaceExtends\")]);\n    def(\"DeclareInterface\")\n        .bases(\"InterfaceDeclaration\")\n        .build(\"id\", \"body\", \"extends\");\n    def(\"InterfaceExtends\")\n        .bases(\"Node\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null), defaults[\"null\"]);\n    def(\"TypeAlias\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"typeParameters\", \"right\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null))\n        .field(\"right\", def(\"FlowType\"));\n    def(\"OpaqueType\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"typeParameters\", \"impltype\", \"supertype\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null))\n        .field(\"impltype\", def(\"FlowType\"))\n        .field(\"supertype\", def(\"FlowType\"));\n    def(\"DeclareTypeAlias\")\n        .bases(\"TypeAlias\")\n        .build(\"id\", \"typeParameters\", \"right\");\n    def(\"DeclareOpaqueType\")\n        .bases(\"TypeAlias\")\n        .build(\"id\", \"typeParameters\", \"supertype\");\n    def(\"TypeCastExpression\")\n        .bases(\"Expression\")\n        .build(\"expression\", \"typeAnnotation\")\n        .field(\"expression\", def(\"Expression\"))\n        .field(\"typeAnnotation\", def(\"TypeAnnotation\"));\n    def(\"TupleTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"types\")\n        .field(\"types\", [def(\"FlowType\")]);\n    def(\"DeclareVariable\")\n        .bases(\"Statement\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"));\n    def(\"DeclareFunction\")\n        .bases(\"Statement\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"));\n    def(\"DeclareClass\")\n        .bases(\"InterfaceDeclaration\")\n        .build(\"id\");\n    def(\"DeclareModule\")\n        .bases(\"Statement\")\n        .build(\"id\", \"body\")\n        .field(\"id\", or(def(\"Identifier\"), def(\"Literal\")))\n        .field(\"body\", def(\"BlockStatement\"));\n    def(\"DeclareModuleExports\")\n        .bases(\"Statement\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"TypeAnnotation\"));\n    def(\"DeclareExportDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"default\", \"declaration\", \"specifiers\", \"source\")\n        .field(\"default\", Boolean)\n        .field(\"declaration\", or(def(\"DeclareVariable\"), def(\"DeclareFunction\"), def(\"DeclareClass\"), def(\"FlowType\"), // Implies default.\n    null))\n        .field(\"specifiers\", [or(def(\"ExportSpecifier\"), def(\"ExportBatchSpecifier\"))], defaults.emptyArray)\n        .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n    def(\"DeclareExportAllDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"source\")\n        .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n    def(\"FlowPredicate\").bases(\"Flow\");\n    def(\"InferredPredicate\")\n        .bases(\"FlowPredicate\")\n        .build();\n    def(\"DeclaredPredicate\")\n        .bases(\"FlowPredicate\")\n        .build(\"value\")\n        .field(\"value\", def(\"Expression\"));\n    def(\"CallExpression\")\n        .field(\"typeArguments\", or(null, def(\"TypeParameterInstantiation\")), defaults[\"null\"]);\n    def(\"NewExpression\")\n        .field(\"typeArguments\", or(null, def(\"TypeParameterInstantiation\")), defaults[\"null\"]);\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}