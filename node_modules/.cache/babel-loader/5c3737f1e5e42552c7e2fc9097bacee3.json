{"ast":null,"code":"'use strict';\n\nconst u = require('universalify').fromCallback;\nconst path = require('path');\nconst fs = require('graceful-fs');\nconst mkdir = require('../mkdirs');\nconst pathExists = require('../path-exists').pathExists;\nfunction createLink(srcpath, dstpath, callback) {\n  function makeLink(srcpath, dstpath) {\n    fs.link(srcpath, dstpath, err => {\n      if (err) return callback(err);\n      callback(null);\n    });\n  }\n  pathExists(dstpath, (err, destinationExists) => {\n    if (err) return callback(err);\n    if (destinationExists) return callback(null);\n    fs.lstat(srcpath, err => {\n      if (err) {\n        err.message = err.message.replace('lstat', 'ensureLink');\n        return callback(err);\n      }\n      const dir = path.dirname(dstpath);\n      pathExists(dir, (err, dirExists) => {\n        if (err) return callback(err);\n        if (dirExists) return makeLink(srcpath, dstpath);\n        mkdir.mkdirs(dir, err => {\n          if (err) return callback(err);\n          makeLink(srcpath, dstpath);\n        });\n      });\n    });\n  });\n}\nfunction createLinkSync(srcpath, dstpath) {\n  const destinationExists = fs.existsSync(dstpath);\n  if (destinationExists) return undefined;\n  try {\n    fs.lstatSync(srcpath);\n  } catch (err) {\n    err.message = err.message.replace('lstat', 'ensureLink');\n    throw err;\n  }\n  const dir = path.dirname(dstpath);\n  const dirExists = fs.existsSync(dir);\n  if (dirExists) return fs.linkSync(srcpath, dstpath);\n  mkdir.mkdirsSync(dir);\n  return fs.linkSync(srcpath, dstpath);\n}\nmodule.exports = {\n  createLink: u(createLink),\n  createLinkSync\n};","map":{"version":3,"names":["u","require","fromCallback","path","fs","mkdir","pathExists","createLink","srcpath","dstpath","callback","makeLink","link","err","destinationExists","lstat","message","replace","dir","dirname","dirExists","mkdirs","createLinkSync","existsSync","undefined","lstatSync","linkSync","mkdirsSync","module","exports"],"sources":["D:/Julieth-Campos/PSO/node_modules/get-uri/node_modules/fs-extra/lib/ensure/link.js"],"sourcesContent":["'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\n\nfunction createLink (srcpath, dstpath, callback) {\n  function makeLink (srcpath, dstpath) {\n    fs.link(srcpath, dstpath, err => {\n      if (err) return callback(err)\n      callback(null)\n    })\n  }\n\n  pathExists(dstpath, (err, destinationExists) => {\n    if (err) return callback(err)\n    if (destinationExists) return callback(null)\n    fs.lstat(srcpath, (err) => {\n      if (err) {\n        err.message = err.message.replace('lstat', 'ensureLink')\n        return callback(err)\n      }\n\n      const dir = path.dirname(dstpath)\n      pathExists(dir, (err, dirExists) => {\n        if (err) return callback(err)\n        if (dirExists) return makeLink(srcpath, dstpath)\n        mkdir.mkdirs(dir, err => {\n          if (err) return callback(err)\n          makeLink(srcpath, dstpath)\n        })\n      })\n    })\n  })\n}\n\nfunction createLinkSync (srcpath, dstpath) {\n  const destinationExists = fs.existsSync(dstpath)\n  if (destinationExists) return undefined\n\n  try {\n    fs.lstatSync(srcpath)\n  } catch (err) {\n    err.message = err.message.replace('lstat', 'ensureLink')\n    throw err\n  }\n\n  const dir = path.dirname(dstpath)\n  const dirExists = fs.existsSync(dir)\n  if (dirExists) return fs.linkSync(srcpath, dstpath)\n  mkdir.mkdirsSync(dir)\n\n  return fs.linkSync(srcpath, dstpath)\n}\n\nmodule.exports = {\n  createLink: u(createLink),\n  createLinkSync\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,CAAC,GAAGC,OAAO,CAAC,cAAc,CAAC,CAACC,YAAY;AAC9C,MAAMC,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMG,EAAE,GAAGH,OAAO,CAAC,aAAa,CAAC;AACjC,MAAMI,KAAK,GAAGJ,OAAO,CAAC,WAAW,CAAC;AAClC,MAAMK,UAAU,GAAGL,OAAO,CAAC,gBAAgB,CAAC,CAACK,UAAU;AAEvD,SAASC,UAAU,CAAEC,OAAO,EAAEC,OAAO,EAAEC,QAAQ,EAAE;EAC/C,SAASC,QAAQ,CAAEH,OAAO,EAAEC,OAAO,EAAE;IACnCL,EAAE,CAACQ,IAAI,CAACJ,OAAO,EAAEC,OAAO,EAAEI,GAAG,IAAI;MAC/B,IAAIA,GAAG,EAAE,OAAOH,QAAQ,CAACG,GAAG,CAAC;MAC7BH,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC;EACJ;EAEAJ,UAAU,CAACG,OAAO,EAAE,CAACI,GAAG,EAAEC,iBAAiB,KAAK;IAC9C,IAAID,GAAG,EAAE,OAAOH,QAAQ,CAACG,GAAG,CAAC;IAC7B,IAAIC,iBAAiB,EAAE,OAAOJ,QAAQ,CAAC,IAAI,CAAC;IAC5CN,EAAE,CAACW,KAAK,CAACP,OAAO,EAAGK,GAAG,IAAK;MACzB,IAAIA,GAAG,EAAE;QACPA,GAAG,CAACG,OAAO,GAAGH,GAAG,CAACG,OAAO,CAACC,OAAO,CAAC,OAAO,EAAE,YAAY,CAAC;QACxD,OAAOP,QAAQ,CAACG,GAAG,CAAC;MACtB;MAEA,MAAMK,GAAG,GAAGf,IAAI,CAACgB,OAAO,CAACV,OAAO,CAAC;MACjCH,UAAU,CAACY,GAAG,EAAE,CAACL,GAAG,EAAEO,SAAS,KAAK;QAClC,IAAIP,GAAG,EAAE,OAAOH,QAAQ,CAACG,GAAG,CAAC;QAC7B,IAAIO,SAAS,EAAE,OAAOT,QAAQ,CAACH,OAAO,EAAEC,OAAO,CAAC;QAChDJ,KAAK,CAACgB,MAAM,CAACH,GAAG,EAAEL,GAAG,IAAI;UACvB,IAAIA,GAAG,EAAE,OAAOH,QAAQ,CAACG,GAAG,CAAC;UAC7BF,QAAQ,CAACH,OAAO,EAAEC,OAAO,CAAC;QAC5B,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAEA,SAASa,cAAc,CAAEd,OAAO,EAAEC,OAAO,EAAE;EACzC,MAAMK,iBAAiB,GAAGV,EAAE,CAACmB,UAAU,CAACd,OAAO,CAAC;EAChD,IAAIK,iBAAiB,EAAE,OAAOU,SAAS;EAEvC,IAAI;IACFpB,EAAE,CAACqB,SAAS,CAACjB,OAAO,CAAC;EACvB,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZA,GAAG,CAACG,OAAO,GAAGH,GAAG,CAACG,OAAO,CAACC,OAAO,CAAC,OAAO,EAAE,YAAY,CAAC;IACxD,MAAMJ,GAAG;EACX;EAEA,MAAMK,GAAG,GAAGf,IAAI,CAACgB,OAAO,CAACV,OAAO,CAAC;EACjC,MAAMW,SAAS,GAAGhB,EAAE,CAACmB,UAAU,CAACL,GAAG,CAAC;EACpC,IAAIE,SAAS,EAAE,OAAOhB,EAAE,CAACsB,QAAQ,CAAClB,OAAO,EAAEC,OAAO,CAAC;EACnDJ,KAAK,CAACsB,UAAU,CAACT,GAAG,CAAC;EAErB,OAAOd,EAAE,CAACsB,QAAQ,CAAClB,OAAO,EAAEC,OAAO,CAAC;AACtC;AAEAmB,MAAM,CAACC,OAAO,GAAG;EACftB,UAAU,EAAEP,CAAC,CAACO,UAAU,CAAC;EACzBe;AACF,CAAC"},"metadata":{},"sourceType":"script"}