{"ast":null,"code":"/**\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @deprecated Do not use.\n *\n * @public\n */\nexport class CustomError extends Error {\n  /**\n   * @internal\n   */\n  constructor(message) {\n    super(message);\n    this.name = this.constructor.name;\n  }\n  /**\n   * @internal\n   */\n  get [Symbol.toStringTag]() {\n    return this.constructor.name;\n  }\n}\n/**\n * TimeoutError is emitted whenever certain operations are terminated due to\n * timeout.\n *\n * @remarks\n * Example operations are {@link Page.waitForSelector | page.waitForSelector} or\n * {@link PuppeteerNode.launch | puppeteer.launch}.\n *\n * @public\n */\nexport class TimeoutError extends CustomError {}\n/**\n * ProtocolError is emitted whenever there is an error from the protocol.\n *\n * @public\n */\nexport class ProtocolError extends CustomError {\n  #code;\n  #originalMessage = '';\n  set code(code) {\n    this.#code = code;\n  }\n  /**\n   * @readonly\n   * @public\n   */\n  get code() {\n    return this.#code;\n  }\n  set originalMessage(originalMessage) {\n    this.#originalMessage = originalMessage;\n  }\n  /**\n   * @readonly\n   * @public\n   */\n  get originalMessage() {\n    return this.#originalMessage;\n  }\n}\n/**\n * @internal\n */\nexport class TargetCloseError extends ProtocolError {}\n/**\n * @deprecated Import error classes directly.\n *\n * Puppeteer methods might throw errors if they are unable to fulfill a request.\n * For example, `page.waitForSelector(selector[, options])` might fail if the\n * selector doesn't match any nodes during the given timeframe.\n *\n * For certain types of errors Puppeteer uses specific error classes. These\n * classes are available via `puppeteer.errors`.\n *\n * @example\n * An example of handling a timeout error:\n *\n * ```ts\n * try {\n *   await page.waitForSelector('.foo');\n * } catch (e) {\n *   if (e instanceof TimeoutError) {\n *     // Do something if this is a timeout.\n *   }\n * }\n * ```\n *\n * @public\n */\nexport const errors = Object.freeze({\n  TimeoutError,\n  ProtocolError\n});","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA;;;;;AAKA,OAAM,MAAOA,WAAY,SAAQC,KAAK;EACpC;;;EAGAC,YAAYC,OAAgB;IAC1B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,IAAI,CAACF,WAAW,CAACE,IAAI;EACnC;EAEA;;;EAGA,KAAKC,MAAM,CAACC,WAAW,IAAC;IACtB,OAAO,IAAI,CAACJ,WAAW,CAACE,IAAI;EAC9B;;AAGF;;;;;;;;;;AAUA,OAAM,MAAOG,YAAa,SAAQP,WAAW;AAE7C;;;;;AAKA,OAAM,MAAOQ,aAAc,SAAQR,WAAW;EAC5C,KAAK;EACL,gBAAgB,GAAG,EAAE;EAErB,IAAIS,IAAI,CAACA,IAAwB;IAC/B,IAAI,CAAC,KAAK,GAAGA,IAAI;EACnB;EACA;;;;EAIA,IAAIA,IAAI;IACN,OAAO,IAAI,CAAC,KAAK;EACnB;EAEA,IAAIC,eAAe,CAACA,eAAuB;IACzC,IAAI,CAAC,gBAAgB,GAAGA,eAAe;EACzC;EACA;;;;EAIA,IAAIA,eAAe;IACjB,OAAO,IAAI,CAAC,gBAAgB;EAC9B;;AAGF;;;AAGA,OAAM,MAAOC,gBAAiB,SAAQH,aAAa;AAYnD;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAO,MAAMI,MAAM,GAAoBC,MAAM,CAACC,MAAM,CAAC;EACnDP,YAAY;EACZC;CACD,CAAC","names":["CustomError","Error","constructor","message","name","Symbol","toStringTag","TimeoutError","ProtocolError","code","originalMessage","TargetCloseError","errors","Object","freeze"],"sources":["D:\\Julieth-Campos\\PSO\\node_modules\\puppeteer-core\\src\\common\\Errors.ts"],"sourcesContent":["/**\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @deprecated Do not use.\n *\n * @public\n */\nexport class CustomError extends Error {\n  /**\n   * @internal\n   */\n  constructor(message?: string) {\n    super(message);\n    this.name = this.constructor.name;\n  }\n\n  /**\n   * @internal\n   */\n  get [Symbol.toStringTag](): string {\n    return this.constructor.name;\n  }\n}\n\n/**\n * TimeoutError is emitted whenever certain operations are terminated due to\n * timeout.\n *\n * @remarks\n * Example operations are {@link Page.waitForSelector | page.waitForSelector} or\n * {@link PuppeteerNode.launch | puppeteer.launch}.\n *\n * @public\n */\nexport class TimeoutError extends CustomError {}\n\n/**\n * ProtocolError is emitted whenever there is an error from the protocol.\n *\n * @public\n */\nexport class ProtocolError extends CustomError {\n  #code?: number;\n  #originalMessage = '';\n\n  set code(code: number | undefined) {\n    this.#code = code;\n  }\n  /**\n   * @readonly\n   * @public\n   */\n  get code(): number | undefined {\n    return this.#code;\n  }\n\n  set originalMessage(originalMessage: string) {\n    this.#originalMessage = originalMessage;\n  }\n  /**\n   * @readonly\n   * @public\n   */\n  get originalMessage(): string {\n    return this.#originalMessage;\n  }\n}\n\n/**\n * @internal\n */\nexport class TargetCloseError extends ProtocolError {}\n\n/**\n * @deprecated Do not use.\n *\n * @public\n */\nexport interface PuppeteerErrors {\n  TimeoutError: typeof TimeoutError;\n  ProtocolError: typeof ProtocolError;\n}\n\n/**\n * @deprecated Import error classes directly.\n *\n * Puppeteer methods might throw errors if they are unable to fulfill a request.\n * For example, `page.waitForSelector(selector[, options])` might fail if the\n * selector doesn't match any nodes during the given timeframe.\n *\n * For certain types of errors Puppeteer uses specific error classes. These\n * classes are available via `puppeteer.errors`.\n *\n * @example\n * An example of handling a timeout error:\n *\n * ```ts\n * try {\n *   await page.waitForSelector('.foo');\n * } catch (e) {\n *   if (e instanceof TimeoutError) {\n *     // Do something if this is a timeout.\n *   }\n * }\n * ```\n *\n * @public\n */\nexport const errors: PuppeteerErrors = Object.freeze({\n  TimeoutError,\n  ProtocolError,\n});\n"]},"metadata":{},"sourceType":"module"}