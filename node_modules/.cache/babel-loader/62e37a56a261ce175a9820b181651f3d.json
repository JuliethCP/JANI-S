{"ast":null,"code":"'use strict';\n\nconst fs = require('graceful-fs');\nconst path = require('path');\nconst invalidWin32Path = require('./win32').invalidWin32Path;\nconst o777 = parseInt('0777', 8);\nfunction mkdirsSync(p, opts, made) {\n  if (!opts || typeof opts !== 'object') {\n    opts = {\n      mode: opts\n    };\n  }\n  let mode = opts.mode;\n  const xfs = opts.fs || fs;\n  if (process.platform === 'win32' && invalidWin32Path(p)) {\n    const errInval = new Error(p + ' contains invalid WIN32 path characters.');\n    errInval.code = 'EINVAL';\n    throw errInval;\n  }\n  if (mode === undefined) {\n    mode = o777 & ~process.umask();\n  }\n  if (!made) made = null;\n  p = path.resolve(p);\n  try {\n    xfs.mkdirSync(p, mode);\n    made = made || p;\n  } catch (err0) {\n    if (err0.code === 'ENOENT') {\n      if (path.dirname(p) === p) throw err0;\n      made = mkdirsSync(path.dirname(p), opts, made);\n      mkdirsSync(p, opts, made);\n    } else {\n      // In the case of any other error, just see if there's a dir there\n      // already. If so, then hooray!  If not, then something is borked.\n      let stat;\n      try {\n        stat = xfs.statSync(p);\n      } catch (err1) {\n        throw err0;\n      }\n      if (!stat.isDirectory()) throw err0;\n    }\n  }\n  return made;\n}\nmodule.exports = mkdirsSync;","map":{"version":3,"names":["fs","require","path","invalidWin32Path","o777","parseInt","mkdirsSync","p","opts","made","mode","xfs","process","platform","errInval","Error","code","undefined","umask","resolve","mkdirSync","err0","dirname","stat","statSync","err1","isDirectory","module","exports"],"sources":["D:/Julieth-Campos/PSO/node_modules/get-uri/node_modules/fs-extra/lib/mkdirs/mkdirs-sync.js"],"sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst invalidWin32Path = require('./win32').invalidWin32Path\n\nconst o777 = parseInt('0777', 8)\n\nfunction mkdirsSync (p, opts, made) {\n  if (!opts || typeof opts !== 'object') {\n    opts = { mode: opts }\n  }\n\n  let mode = opts.mode\n  const xfs = opts.fs || fs\n\n  if (process.platform === 'win32' && invalidWin32Path(p)) {\n    const errInval = new Error(p + ' contains invalid WIN32 path characters.')\n    errInval.code = 'EINVAL'\n    throw errInval\n  }\n\n  if (mode === undefined) {\n    mode = o777 & (~process.umask())\n  }\n  if (!made) made = null\n\n  p = path.resolve(p)\n\n  try {\n    xfs.mkdirSync(p, mode)\n    made = made || p\n  } catch (err0) {\n    if (err0.code === 'ENOENT') {\n      if (path.dirname(p) === p) throw err0\n      made = mkdirsSync(path.dirname(p), opts, made)\n      mkdirsSync(p, opts, made)\n    } else {\n      // In the case of any other error, just see if there's a dir there\n      // already. If so, then hooray!  If not, then something is borked.\n      let stat\n      try {\n        stat = xfs.statSync(p)\n      } catch (err1) {\n        throw err0\n      }\n      if (!stat.isDirectory()) throw err0\n    }\n  }\n\n  return made\n}\n\nmodule.exports = mkdirsSync\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,EAAE,GAAGC,OAAO,CAAC,aAAa,CAAC;AACjC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,gBAAgB,GAAGF,OAAO,CAAC,SAAS,CAAC,CAACE,gBAAgB;AAE5D,MAAMC,IAAI,GAAGC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;AAEhC,SAASC,UAAU,CAAEC,CAAC,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAClC,IAAI,CAACD,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IACrCA,IAAI,GAAG;MAAEE,IAAI,EAAEF;IAAK,CAAC;EACvB;EAEA,IAAIE,IAAI,GAAGF,IAAI,CAACE,IAAI;EACpB,MAAMC,GAAG,GAAGH,IAAI,CAACR,EAAE,IAAIA,EAAE;EAEzB,IAAIY,OAAO,CAACC,QAAQ,KAAK,OAAO,IAAIV,gBAAgB,CAACI,CAAC,CAAC,EAAE;IACvD,MAAMO,QAAQ,GAAG,IAAIC,KAAK,CAACR,CAAC,GAAG,0CAA0C,CAAC;IAC1EO,QAAQ,CAACE,IAAI,GAAG,QAAQ;IACxB,MAAMF,QAAQ;EAChB;EAEA,IAAIJ,IAAI,KAAKO,SAAS,EAAE;IACtBP,IAAI,GAAGN,IAAI,GAAI,CAACQ,OAAO,CAACM,KAAK,EAAG;EAClC;EACA,IAAI,CAACT,IAAI,EAAEA,IAAI,GAAG,IAAI;EAEtBF,CAAC,GAAGL,IAAI,CAACiB,OAAO,CAACZ,CAAC,CAAC;EAEnB,IAAI;IACFI,GAAG,CAACS,SAAS,CAACb,CAAC,EAAEG,IAAI,CAAC;IACtBD,IAAI,GAAGA,IAAI,IAAIF,CAAC;EAClB,CAAC,CAAC,OAAOc,IAAI,EAAE;IACb,IAAIA,IAAI,CAACL,IAAI,KAAK,QAAQ,EAAE;MAC1B,IAAId,IAAI,CAACoB,OAAO,CAACf,CAAC,CAAC,KAAKA,CAAC,EAAE,MAAMc,IAAI;MACrCZ,IAAI,GAAGH,UAAU,CAACJ,IAAI,CAACoB,OAAO,CAACf,CAAC,CAAC,EAAEC,IAAI,EAAEC,IAAI,CAAC;MAC9CH,UAAU,CAACC,CAAC,EAAEC,IAAI,EAAEC,IAAI,CAAC;IAC3B,CAAC,MAAM;MACL;MACA;MACA,IAAIc,IAAI;MACR,IAAI;QACFA,IAAI,GAAGZ,GAAG,CAACa,QAAQ,CAACjB,CAAC,CAAC;MACxB,CAAC,CAAC,OAAOkB,IAAI,EAAE;QACb,MAAMJ,IAAI;MACZ;MACA,IAAI,CAACE,IAAI,CAACG,WAAW,EAAE,EAAE,MAAML,IAAI;IACrC;EACF;EAEA,OAAOZ,IAAI;AACb;AAEAkB,MAAM,CAACC,OAAO,GAAGtB,UAAU"},"metadata":{},"sourceType":"script"}