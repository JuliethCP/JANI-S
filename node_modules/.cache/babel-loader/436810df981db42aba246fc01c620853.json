{"ast":null,"code":"/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport path from 'path';\nimport { BrowserPlatform } from './types.js';\nfunction folder(platform) {\n  switch (platform) {\n    case BrowserPlatform.LINUX:\n      return 'linux64';\n    case BrowserPlatform.MAC_ARM:\n      return 'mac-arm64';\n    case BrowserPlatform.MAC:\n      return 'mac-x64';\n    case BrowserPlatform.WIN32:\n      return 'win32';\n    case BrowserPlatform.WIN64:\n      return 'win64';\n  }\n}\nexport function resolveDownloadUrl(platform, buildId) {\n  let baseUrl = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing';\n  return `${baseUrl}/${resolveDownloadPath(platform, buildId).join('/')}`;\n}\nexport function resolveDownloadPath(platform, buildId) {\n  return [buildId, folder(platform), `chromedriver-${folder(platform)}.zip`];\n}\nexport function relativeExecutablePath(platform, _buildId) {\n  switch (platform) {\n    case BrowserPlatform.MAC:\n    case BrowserPlatform.MAC_ARM:\n      return path.join('chromedriver-' + folder(platform), 'chromedriver');\n    case BrowserPlatform.LINUX:\n      return path.join('chromedriver-linux64', 'chromedriver');\n    case BrowserPlatform.WIN32:\n    case BrowserPlatform.WIN64:\n      return path.join('chromedriver-' + folder(platform), 'chromedriver.exe');\n  }\n}\nexport { resolveBuildId } from './chrome.js';","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;AAeA,OAAOA,IAAI,MAAM,MAAM;AAEvB,SAAQC,eAAe,QAAO,YAAY;AAE1C,SAASC,MAAM,CAACC,QAAyB;EACvC,QAAQA,QAAQ;IACd,KAAKF,eAAe,CAACG,KAAK;MACxB,OAAO,SAAS;IAClB,KAAKH,eAAe,CAACI,OAAO;MAC1B,OAAO,WAAW;IACpB,KAAKJ,eAAe,CAACK,GAAG;MACtB,OAAO,SAAS;IAClB,KAAKL,eAAe,CAACM,KAAK;MACxB,OAAO,OAAO;IAChB,KAAKN,eAAe,CAACO,KAAK;MACxB,OAAO,OAAO;EAAC;AAErB;AAEA,OAAM,SAAUC,kBAAkB,CAChCN,QAAyB,EACzBO,OAAe,EACwD;EAAA,IAAvEC,OAAO,uEAAG,6DAA6D;EAEvE,OAAO,GAAGA,OAAO,IAAIC,mBAAmB,CAACT,QAAQ,EAAEO,OAAO,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC,EAAE;AACzE;AAEA,OAAM,SAAUD,mBAAmB,CACjCT,QAAyB,EACzBO,OAAe;EAEf,OAAO,CAACA,OAAO,EAAER,MAAM,CAACC,QAAQ,CAAC,EAAE,gBAAgBD,MAAM,CAACC,QAAQ,CAAC,MAAM,CAAC;AAC5E;AAEA,OAAM,SAAUW,sBAAsB,CACpCX,QAAyB,EACzBY,QAAgB;EAEhB,QAAQZ,QAAQ;IACd,KAAKF,eAAe,CAACK,GAAG;IACxB,KAAKL,eAAe,CAACI,OAAO;MAC1B,OAAOL,IAAI,CAACa,IAAI,CAAC,eAAe,GAAGX,MAAM,CAACC,QAAQ,CAAC,EAAE,cAAc,CAAC;IACtE,KAAKF,eAAe,CAACG,KAAK;MACxB,OAAOJ,IAAI,CAACa,IAAI,CAAC,sBAAsB,EAAE,cAAc,CAAC;IAC1D,KAAKZ,eAAe,CAACM,KAAK;IAC1B,KAAKN,eAAe,CAACO,KAAK;MACxB,OAAOR,IAAI,CAACa,IAAI,CAAC,eAAe,GAAGX,MAAM,CAACC,QAAQ,CAAC,EAAE,kBAAkB,CAAC;EAAC;AAE/E;AAEA,SAAQa,cAAc,QAAO,aAAa","names":["path","BrowserPlatform","folder","platform","LINUX","MAC_ARM","MAC","WIN32","WIN64","resolveDownloadUrl","buildId","baseUrl","resolveDownloadPath","join","relativeExecutablePath","_buildId","resolveBuildId"],"sources":["D:\\Julieth-Campos\\PSO\\node_modules\\@puppeteer\\browsers\\src\\browser-data\\chromedriver.ts"],"sourcesContent":["/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport path from 'path';\n\nimport {BrowserPlatform} from './types.js';\n\nfunction folder(platform: BrowserPlatform): string {\n  switch (platform) {\n    case BrowserPlatform.LINUX:\n      return 'linux64';\n    case BrowserPlatform.MAC_ARM:\n      return 'mac-arm64';\n    case BrowserPlatform.MAC:\n      return 'mac-x64';\n    case BrowserPlatform.WIN32:\n      return 'win32';\n    case BrowserPlatform.WIN64:\n      return 'win64';\n  }\n}\n\nexport function resolveDownloadUrl(\n  platform: BrowserPlatform,\n  buildId: string,\n  baseUrl = 'https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing'\n): string {\n  return `${baseUrl}/${resolveDownloadPath(platform, buildId).join('/')}`;\n}\n\nexport function resolveDownloadPath(\n  platform: BrowserPlatform,\n  buildId: string\n): string[] {\n  return [buildId, folder(platform), `chromedriver-${folder(platform)}.zip`];\n}\n\nexport function relativeExecutablePath(\n  platform: BrowserPlatform,\n  _buildId: string\n): string {\n  switch (platform) {\n    case BrowserPlatform.MAC:\n    case BrowserPlatform.MAC_ARM:\n      return path.join('chromedriver-' + folder(platform), 'chromedriver');\n    case BrowserPlatform.LINUX:\n      return path.join('chromedriver-linux64', 'chromedriver');\n    case BrowserPlatform.WIN32:\n    case BrowserPlatform.WIN64:\n      return path.join('chromedriver-' + folder(platform), 'chromedriver.exe');\n  }\n}\n\nexport {resolveBuildId} from './chrome.js';\n"]},"metadata":{},"sourceType":"module"}