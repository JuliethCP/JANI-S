{"ast":null,"code":"var _jsxFileName = \"D:\\\\Julieth-Campos\\\\PSO\\\\src\\\\components\\\\ScreenRecordingComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScreenRecordingComponent(_ref) {\n  _s();\n  let {\n    switchToAnalysis\n  } = _ref;\n  const [isRecording, setIsRecording] = useState(false);\n  let mediaStream;\n  let mediaRecorder;\n  let mediaChunks = [];\n  const startRecording = async () => {\n    try {\n      mediaStream = await navigator.mediaDevices.getDisplayMedia({\n        video: true,\n        audio: true\n      });\n      // Asegúrate de que estos elementos estén presentes en tu componente.\n      const videoElement = document.getElementById(\"preview\");\n      const startRecordingButton = document.getElementById(\"startRecording\");\n      const stopRecordingButton = document.getElementById(\"stopRecording\");\n      if (videoElement) {\n        videoElement.srcObject = mediaStream;\n      }\n      mediaRecorder = new MediaRecorder(mediaStream);\n      mediaRecorder.ondataavailable = e => {\n        if (e.data.size > 0) {\n          mediaChunks.push(e.data);\n        }\n      };\n      mediaRecorder.onstop = () => {\n        const mediaBlob = new Blob(mediaChunks, {\n          type: \"video/webm\"\n        });\n        mediaChunks = [];\n\n        // Convertir el fragmento de video a mp4 y guardar\n        const videoUrl = URL.createObjectURL(mediaBlob);\n        const a = document.createElement(\"a\");\n        a.href = videoUrl;\n        a.download = \"captura.mp4\"; // Cambia el nombre del archivo si es necesario\n        a.click();\n        URL.revokeObjectURL(videoUrl);\n      };\n      mediaRecorder.start();\n      if (startRecordingButton) {\n        startRecordingButton.disabled = true;\n      }\n      if (stopRecordingButton) {\n        stopRecordingButton.disabled = false;\n      }\n      setIsRecording(true);\n    } catch (error) {\n      console.error(\"Error al acceder a la pantalla o región:\", error);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorder && mediaStream) {\n      mediaRecorder.stop();\n      mediaStream.getTracks().forEach(track => track.stop());\n      setIsRecording(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Interfaz de Grabaci\\xF3n de Pantalla\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"preview\",\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"startRecording\",\n      onClick: startRecording,\n      disabled: isRecording,\n      children: \"Iniciar Grabaci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"stopRecording\",\n      onClick: stopRecording,\n      disabled: !isRecording,\n      children: \"Detener Grabaci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: switchToAnalysis,\n      children: \"Cambiar a An\\xE1lisis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(ScreenRecordingComponent, \"NOd79/f2BaY9QoyKdQLHCBEoQiE=\");\n_c = ScreenRecordingComponent;\nexport default ScreenRecordingComponent;\nvar _c;\n$RefreshReg$(_c, \"ScreenRecordingComponent\");","map":{"version":3,"names":["React","useState","ScreenRecordingComponent","switchToAnalysis","isRecording","setIsRecording","mediaStream","mediaRecorder","mediaChunks","startRecording","navigator","mediaDevices","getDisplayMedia","video","audio","videoElement","document","getElementById","startRecordingButton","stopRecordingButton","srcObject","MediaRecorder","ondataavailable","e","data","size","push","onstop","mediaBlob","Blob","type","videoUrl","URL","createObjectURL","a","createElement","href","download","click","revokeObjectURL","start","disabled","error","console","stopRecording","stop","getTracks","forEach","track"],"sources":["D:/Julieth-Campos/PSO/src/components/ScreenRecordingComponent.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction ScreenRecordingComponent({ switchToAnalysis }) {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  let mediaStream;\r\n  let mediaRecorder;\r\n  let mediaChunks = [];\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      mediaStream = await navigator.mediaDevices.getDisplayMedia({ video: true, audio: true });\r\n      // Asegúrate de que estos elementos estén presentes en tu componente.\r\n      const videoElement = document.getElementById(\"preview\");\r\n      const startRecordingButton = document.getElementById(\"startRecording\");\r\n      const stopRecordingButton = document.getElementById(\"stopRecording\");\r\n\r\n      if (videoElement) {\r\n        videoElement.srcObject = mediaStream;\r\n      }\r\n\r\n      mediaRecorder = new MediaRecorder(mediaStream);\r\n\r\n      mediaRecorder.ondataavailable = (e) => {\r\n        if (e.data.size > 0) {\r\n          mediaChunks.push(e.data);\r\n        }\r\n      };\r\n\r\n      mediaRecorder.onstop = () => {\r\n        const mediaBlob = new Blob(mediaChunks, { type: \"video/webm\" });\r\n        mediaChunks = [];\r\n\r\n        // Convertir el fragmento de video a mp4 y guardar\r\n        const videoUrl = URL.createObjectURL(mediaBlob);\r\n        const a = document.createElement(\"a\");\r\n        a.href = videoUrl;\r\n        a.download = \"captura.mp4\"; // Cambia el nombre del archivo si es necesario\r\n        a.click();\r\n        URL.revokeObjectURL(videoUrl);\r\n      };\r\n\r\n      mediaRecorder.start();\r\n      if (startRecordingButton) {\r\n        startRecordingButton.disabled = true;\r\n      }\r\n      if (stopRecordingButton) {\r\n        stopRecordingButton.disabled = false;\r\n      }\r\n      setIsRecording(true);\r\n    } catch (error) {\r\n      console.error(\"Error al acceder a la pantalla o región:\", error);\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorder && mediaStream) {\r\n      mediaRecorder.stop();\r\n      mediaStream.getTracks().forEach((track) => track.stop());\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Interfaz de Grabación de Pantalla</h2>\r\n      <video id=\"preview\" autoPlay></video>\r\n      <button\r\n        id=\"startRecording\"\r\n        onClick={startRecording}\r\n        disabled={isRecording}\r\n      >\r\n        Iniciar Grabación\r\n      </button>\r\n      <button\r\n        id=\"stopRecording\"\r\n        onClick={stopRecording}\r\n        disabled={!isRecording}\r\n      >\r\n        Detener Grabación\r\n      </button>\r\n      <button onClick={switchToAnalysis}>Cambiar a Análisis</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScreenRecordingComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}