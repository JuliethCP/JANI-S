{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst util_1 = require(\"./util\");\n/**\n * Resolves the given DNS hostname into an IP address, and returns it in the dot\n * separated format as a string.\n *\n * Example:\n *\n * ``` js\n * dnsResolve(\"home.netscape.com\")\n *   // returns the string \"198.95.249.79\".\n * ```\n *\n * @param {String} host hostname to resolve\n * @return {String} resolved IP address\n */\nasync function dnsResolve(host) {\n  const family = 4;\n  try {\n    const r = await (0, util_1.dnsLookup)(host, {\n      family\n    });\n    if (typeof r === 'string') {\n      return r;\n    }\n  } catch (err) {\n    // @ignore\n  }\n  return null;\n}\nexports.default = dnsResolve;","map":{"version":3,"mappings":";;;;;AAAA;AAEA;;;;;;;;;;;;;;AAee,eAAeA,UAAU,CAACC,IAAY;EACpD,MAAMC,MAAM,GAAG,CAAC;EAChB,IAAI;IACH,MAAMC,CAAC,GAAG,MAAM,oBAAS,EAACF,IAAI,EAAE;MAAEC;IAAM,CAAE,CAAC;IAC3C,IAAI,OAAOC,CAAC,KAAK,QAAQ,EAAE;MAC1B,OAAOA,CAAC;;GAET,CAAC,OAAOC,GAAG,EAAE;IACb;EAAA;EAED,OAAO,IAAI;AACZ;AAXAC","names":["dnsResolve","host","family","r","err","exports"],"sources":["../src/dnsResolve.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}