{"ast":null,"code":"'use strict';\n\nvar Type = require('../type');\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n  var max = data.length;\n  return max === 1 && data === '~' || max === 4 && (data === 'null' || data === 'Null' || data === 'NULL');\n}\nfunction constructYamlNull() {\n  return null;\n}\nfunction isNull(object) {\n  return object === null;\n}\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () {\n      return '~';\n    },\n    lowercase: function () {\n      return 'null';\n    },\n    uppercase: function () {\n      return 'NULL';\n    },\n    camelcase: function () {\n      return 'Null';\n    },\n    empty: function () {\n      return '';\n    }\n  },\n  defaultStyle: 'lowercase'\n});","map":{"version":3,"names":["Type","require","resolveYamlNull","data","max","length","constructYamlNull","isNull","object","module","exports","kind","resolve","construct","predicate","represent","canonical","lowercase","uppercase","camelcase","empty","defaultStyle"],"sources":["D:/Julieth-Campos/PSO/node_modules/puppeteer/node_modules/js-yaml/lib/type/null.js"],"sourcesContent":["'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,SAAS,CAAC;AAE7B,SAASC,eAAe,CAACC,IAAI,EAAE;EAC7B,IAAIA,IAAI,KAAK,IAAI,EAAE,OAAO,IAAI;EAE9B,IAAIC,GAAG,GAAGD,IAAI,CAACE,MAAM;EAErB,OAAQD,GAAG,KAAK,CAAC,IAAID,IAAI,KAAK,GAAG,IACzBC,GAAG,KAAK,CAAC,KAAKD,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,MAAM,CAAE;AAC/E;AAEA,SAASG,iBAAiB,GAAG;EAC3B,OAAO,IAAI;AACb;AAEA,SAASC,MAAM,CAACC,MAAM,EAAE;EACtB,OAAOA,MAAM,KAAK,IAAI;AACxB;AAEAC,MAAM,CAACC,OAAO,GAAG,IAAIV,IAAI,CAAC,wBAAwB,EAAE;EAClDW,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAEV,eAAe;EACxBW,SAAS,EAAEP,iBAAiB;EAC5BQ,SAAS,EAAEP,MAAM;EACjBQ,SAAS,EAAE;IACTC,SAAS,EAAE,YAAY;MAAE,OAAO,GAAG;IAAK,CAAC;IACzCC,SAAS,EAAE,YAAY;MAAE,OAAO,MAAM;IAAE,CAAC;IACzCC,SAAS,EAAE,YAAY;MAAE,OAAO,MAAM;IAAE,CAAC;IACzCC,SAAS,EAAE,YAAY;MAAE,OAAO,MAAM;IAAE,CAAC;IACzCC,KAAK,EAAM,YAAY;MAAE,OAAO,EAAE;IAAM;EAC1C,CAAC;EACDC,YAAY,EAAE;AAChB,CAAC,CAAC"},"metadata":{},"sourceType":"script"}