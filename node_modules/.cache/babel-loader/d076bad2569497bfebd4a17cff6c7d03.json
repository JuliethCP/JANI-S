{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sandbox = exports.createPacResolver = void 0;\nconst degenerator_1 = require(\"degenerator\");\n/**\n * Built-in PAC functions.\n */\nconst dateRange_1 = __importDefault(require(\"./dateRange\"));\nconst dnsDomainIs_1 = __importDefault(require(\"./dnsDomainIs\"));\nconst dnsDomainLevels_1 = __importDefault(require(\"./dnsDomainLevels\"));\nconst dnsResolve_1 = __importDefault(require(\"./dnsResolve\"));\nconst isInNet_1 = __importDefault(require(\"./isInNet\"));\nconst isPlainHostName_1 = __importDefault(require(\"./isPlainHostName\"));\nconst isResolvable_1 = __importDefault(require(\"./isResolvable\"));\nconst localHostOrDomainIs_1 = __importDefault(require(\"./localHostOrDomainIs\"));\nconst myIpAddress_1 = __importDefault(require(\"./myIpAddress\"));\nconst shExpMatch_1 = __importDefault(require(\"./shExpMatch\"));\nconst timeRange_1 = __importDefault(require(\"./timeRange\"));\nconst weekdayRange_1 = __importDefault(require(\"./weekdayRange\"));\n/**\n * Returns an asynchronous `FindProxyForURL()` function\n * from the given JS string (from a PAC file).\n */\nfunction createPacResolver(qjs, _str) {\n  let _opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const str = Buffer.isBuffer(_str) ? _str.toString('utf8') : _str;\n  // The sandbox to use for the `vm` context.\n  const context = {\n    ...exports.sandbox,\n    ..._opts.sandbox\n  };\n  // Construct the array of async function names to add `await` calls to.\n  const names = Object.keys(context).filter(k => isAsyncFunction(context[k]));\n  const opts = {\n    filename: 'proxy.pac',\n    names,\n    ..._opts,\n    sandbox: context\n  };\n  // Compile the JS `FindProxyForURL()` function into an async function.\n  const resolver = (0, degenerator_1.compile)(qjs, str, 'FindProxyForURL', opts);\n  function FindProxyForURL(url, _host) {\n    const urlObj = typeof url === 'string' ? new URL(url) : url;\n    const host = _host || urlObj.hostname;\n    if (!host) {\n      throw new TypeError('Could not determine `host`');\n    }\n    return resolver(urlObj.href, host);\n  }\n  Object.defineProperty(FindProxyForURL, 'toString', {\n    value: () => resolver.toString(),\n    enumerable: false\n  });\n  return FindProxyForURL;\n}\nexports.createPacResolver = createPacResolver;\nexports.sandbox = Object.freeze({\n  alert: function () {\n    let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return console.log('%s', message);\n  },\n  dateRange: dateRange_1.default,\n  dnsDomainIs: dnsDomainIs_1.default,\n  dnsDomainLevels: dnsDomainLevels_1.default,\n  dnsResolve: dnsResolve_1.default,\n  isInNet: isInNet_1.default,\n  isPlainHostName: isPlainHostName_1.default,\n  isResolvable: isResolvable_1.default,\n  localHostOrDomainIs: localHostOrDomainIs_1.default,\n  myIpAddress: myIpAddress_1.default,\n  shExpMatch: shExpMatch_1.default,\n  timeRange: timeRange_1.default,\n  weekdayRange: weekdayRange_1.default\n});\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isAsyncFunction(v) {\n  if (typeof v !== 'function') return false;\n  // Native `AsyncFunction`\n  if (v.constructor.name === 'AsyncFunction') return true;\n  // TypeScript compiled\n  if (String(v).indexOf('__awaiter(') !== -1) return true;\n  // Legacy behavior - set `async` property on the function\n  return Boolean(v.async);\n}","map":{"version":3,"mappings":";;;;;;;;;;;AACA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;AAIA,SAAgBA,iBAAiB,CAChCC,GAAsB,EACtBC,IAAqB,EACS;EAAA,IAA9BC,4EAA4B,EAAE;EAE9B,MAAMC,GAAG,GAAGC,MAAM,CAACC,QAAQ,CAACJ,IAAI,CAAC,GAAGA,IAAI,CAACK,QAAQ,CAAC,MAAM,CAAC,GAAGL,IAAI;EAEhE;EACA,MAAMM,OAAO,GAAY;IACxB,GAAGC,eAAO;IACV,GAAGN,KAAK,CAACO;GACT;EAED;EACA,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACL,OAAO,CAAC,CAACM,MAAM,CAAEC,CAAC,IAC3CC,eAAe,CAACR,OAAO,CAACO,CAAC,CAAC,CAAC,CAC3B;EAED,MAAME,IAAI,GAAuB;IAChCC,QAAQ,EAAE,WAAW;IACrBP,KAAK;IACL,GAAGR,KAAK;IACRO,OAAO,EAAEF;GACT;EAED;EACA,MAAMW,QAAQ,GAAG,yBAAO,EACvBlB,GAAG,EACHG,GAAG,EACH,iBAAiB,EACjBa,IAAI,CACJ;EAED,SAASG,eAAe,CACvBC,GAAiB,EACjBC,KAAc;IAEd,MAAMC,MAAM,GAAG,OAAOF,GAAG,KAAK,QAAQ,GAAG,IAAIG,GAAG,CAACH,GAAG,CAAC,GAAGA,GAAG;IAC3D,MAAMI,IAAI,GAAGH,KAAK,IAAIC,MAAM,CAACG,QAAQ;IAErC,IAAI,CAACD,IAAI,EAAE;MACV,MAAM,IAAIE,SAAS,CAAC,4BAA4B,CAAC;;IAGlD,OAAOR,QAAQ,CAACI,MAAM,CAACK,IAAI,EAAEH,IAAI,CAAC;EACnC;EAEAb,MAAM,CAACiB,cAAc,CAACT,eAAe,EAAE,UAAU,EAAE;IAClDU,KAAK,EAAE,MAAMX,QAAQ,CAACZ,QAAQ,EAAE;IAChCwB,UAAU,EAAE;GACZ,CAAC;EAEF,OAAOX,eAAe;AACvB;AArDAX;AAqIaA,eAAO,GAAGG,MAAM,CAACoB,MAAM,CAAC;EACpCC,KAAK,EAAE;IAAA,IAACC,OAAO,uEAAG,EAAE;IAAA,OAAKC,OAAO,CAACC,GAAG,CAAC,IAAI,EAAEF,OAAO,CAAC;EAAA;EACnDG,SAAS,EAATC,mBAAS;EACTC,WAAW,EAAXC,qBAAW;EACXC,eAAe,EAAfC,yBAAe;EACfC,UAAU,EAAVC,oBAAU;EACVC,OAAO,EAAPC,iBAAO;EACPC,eAAe,EAAfC,yBAAe;EACfC,YAAY,EAAZC,sBAAY;EACZC,mBAAmB,EAAnBC,6BAAmB;EACnBC,WAAW,EAAXC,qBAAW;EACXC,UAAU,EAAVC,oBAAU;EACVC,SAAS,EAATC,mBAAS;EACTC,YAAY,EAAZC;CACA,CAAC;AAEF;AACA,SAAS5C,eAAe,CAAC6C,CAAM;EAC9B,IAAI,OAAOA,CAAC,KAAK,UAAU,EAAE,OAAO,KAAK;EACzC;EACA,IAAIA,CAAC,CAACC,WAAW,CAACC,IAAI,KAAK,eAAe,EAAE,OAAO,IAAI;EACvD;EACA,IAAIC,MAAM,CAACH,CAAC,CAAC,CAACI,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,IAAI;EACvD;EACA,OAAOC,OAAO,CAACL,CAAC,CAACM,KAAK,CAAC;AACxB","names":["createPacResolver","qjs","_str","_opts","str","Buffer","isBuffer","toString","context","exports","sandbox","names","Object","keys","filter","k","isAsyncFunction","opts","filename","resolver","FindProxyForURL","url","_host","urlObj","URL","host","hostname","TypeError","href","defineProperty","value","enumerable","freeze","alert","message","console","log","dateRange","dateRange_1","dnsDomainIs","dnsDomainIs_1","dnsDomainLevels","dnsDomainLevels_1","dnsResolve","dnsResolve_1","isInNet","isInNet_1","isPlainHostName","isPlainHostName_1","isResolvable","isResolvable_1","localHostOrDomainIs","localHostOrDomainIs_1","myIpAddress","myIpAddress_1","shExpMatch","shExpMatch_1","timeRange","timeRange_1","weekdayRange","weekdayRange_1","v","constructor","name","String","indexOf","Boolean","async"],"sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}