{"ast":null,"code":"/**\n * @internal\n */\nexport class AsyncIterableUtil {\n  static async *map(iterable, map) {\n    for await (const value of iterable) {\n      yield await map(value);\n    }\n  }\n  static async *flatMap(iterable, map) {\n    for await (const value of iterable) {\n      yield* map(value);\n    }\n  }\n  static async collect(iterable) {\n    const result = [];\n    for await (const value of iterable) {\n      result.push(value);\n    }\n    return result;\n  }\n  static async first(iterable) {\n    for await (const value of iterable) {\n      return value;\n    }\n    return;\n  }\n}","map":{"version":3,"mappings":"AAiBA;;;AAGA,OAAM,MAAOA,iBAAiB;EAC5B,cAAcC,GAAG,CACfC,QAA8B,EAC9BD,GAA4B;IAE5B,WAAW,MAAME,KAAK,IAAID,QAAQ,EAAE;MAClC,MAAM,MAAMD,GAAG,CAACE,KAAK,CAAC;;EAE1B;EAEA,cAAcC,OAAO,CACnBF,QAA8B,EAC9BD,GAAsC;IAEtC,WAAW,MAAME,KAAK,IAAID,QAAQ,EAAE;MAClC,OAAOD,GAAG,CAACE,KAAK,CAAC;;EAErB;EAEA,aAAaE,OAAO,CAAIH,QAA8B;IACpD,MAAMI,MAAM,GAAG,EAAE;IACjB,WAAW,MAAMH,KAAK,IAAID,QAAQ,EAAE;MAClCI,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC;;IAEpB,OAAOG,MAAM;EACf;EAEA,aAAaE,KAAK,CAChBN,QAA8B;IAE9B,WAAW,MAAMC,KAAK,IAAID,QAAQ,EAAE;MAClC,OAAOC,KAAK;;IAEd;EACF","names":["AsyncIterableUtil","map","iterable","value","flatMap","collect","result","push","first"],"sources":["D:\\Julieth-Campos\\PSO\\node_modules\\puppeteer-core\\src\\util\\AsyncIterableUtil.ts"],"sourcesContent":["/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type {AwaitableIterable} from '../common/types.js';\n\n/**\n * @internal\n */\nexport class AsyncIterableUtil {\n  static async *map<T, U>(\n    iterable: AwaitableIterable<T>,\n    map: (item: T) => Promise<U>\n  ): AsyncIterable<U> {\n    for await (const value of iterable) {\n      yield await map(value);\n    }\n  }\n\n  static async *flatMap<T, U>(\n    iterable: AwaitableIterable<T>,\n    map: (item: T) => AwaitableIterable<U>\n  ): AsyncIterable<U> {\n    for await (const value of iterable) {\n      yield* map(value);\n    }\n  }\n\n  static async collect<T>(iterable: AwaitableIterable<T>): Promise<T[]> {\n    const result = [];\n    for await (const value of iterable) {\n      result.push(value);\n    }\n    return result;\n  }\n\n  static async first<T>(\n    iterable: AwaitableIterable<T>\n  ): Promise<T | undefined> {\n    for await (const value of iterable) {\n      return value;\n    }\n    return;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}