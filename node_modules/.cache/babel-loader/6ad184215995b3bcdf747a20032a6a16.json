{"ast":null,"code":"'use strict';\n\n// This is adapted from https://github.com/normalize/mz\n// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors\nconst u = require('universalify').fromCallback;\nconst fs = require('graceful-fs');\nconst api = ['access', 'appendFile', 'chmod', 'chown', 'close', 'copyFile', 'fchmod', 'fchown', 'fdatasync', 'fstat', 'fsync', 'ftruncate', 'futimes', 'lchown', 'lchmod', 'link', 'lstat', 'mkdir', 'mkdtemp', 'open', 'readFile', 'readdir', 'readlink', 'realpath', 'rename', 'rmdir', 'stat', 'symlink', 'truncate', 'unlink', 'utimes', 'writeFile'].filter(key => {\n  // Some commands are not available on some systems. Ex:\n  // fs.copyFile was added in Node.js v8.5.0\n  // fs.mkdtemp was added in Node.js v5.10.0\n  // fs.lchown is not available on at least some Linux\n  return typeof fs[key] === 'function';\n});\n\n// Export all keys:\nObject.keys(fs).forEach(key => {\n  if (key === 'promises') {\n    // fs.promises is a getter property that triggers ExperimentalWarning\n    // Don't re-export it here, the getter is defined in \"lib/index.js\"\n    return;\n  }\n  exports[key] = fs[key];\n});\n\n// Universalify async methods:\napi.forEach(method => {\n  exports[method] = u(fs[method]);\n});\n\n// We differ from mz/fs in that we still ship the old, broken, fs.exists()\n// since we are a drop-in replacement for the native module\nexports.exists = function (filename, callback) {\n  if (typeof callback === 'function') {\n    return fs.exists(filename, callback);\n  }\n  return new Promise(resolve => {\n    return fs.exists(filename, resolve);\n  });\n};\n\n// fs.read() & fs.write need special treatment due to multiple callback args\n\nexports.read = function (fd, buffer, offset, length, position, callback) {\n  if (typeof callback === 'function') {\n    return fs.read(fd, buffer, offset, length, position, callback);\n  }\n  return new Promise((resolve, reject) => {\n    fs.read(fd, buffer, offset, length, position, (err, bytesRead, buffer) => {\n      if (err) return reject(err);\n      resolve({\n        bytesRead,\n        buffer\n      });\n    });\n  });\n};\n\n// Function signature can be\n// fs.write(fd, buffer[, offset[, length[, position]]], callback)\n// OR\n// fs.write(fd, string[, position[, encoding]], callback)\n// We need to handle both cases, so we use ...args\nexports.write = function (fd, buffer) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n  if (typeof args[args.length - 1] === 'function') {\n    return fs.write(fd, buffer, ...args);\n  }\n  return new Promise((resolve, reject) => {\n    fs.write(fd, buffer, ...args, (err, bytesWritten, buffer) => {\n      if (err) return reject(err);\n      resolve({\n        bytesWritten,\n        buffer\n      });\n    });\n  });\n};\n\n// fs.realpath.native only available in Node v9.2+\nif (typeof fs.realpath.native === 'function') {\n  exports.realpath.native = u(fs.realpath.native);\n}","map":{"version":3,"names":["u","require","fromCallback","fs","api","filter","key","Object","keys","forEach","exports","method","exists","filename","callback","Promise","resolve","read","fd","buffer","offset","length","position","reject","err","bytesRead","write","args","bytesWritten","realpath","native"],"sources":["D:/Julieth-Campos/PSO/node_modules/get-uri/node_modules/fs-extra/lib/fs/index.js"],"sourcesContent":["'use strict'\n// This is adapted from https://github.com/normalize/mz\n// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\n\nconst api = [\n  'access',\n  'appendFile',\n  'chmod',\n  'chown',\n  'close',\n  'copyFile',\n  'fchmod',\n  'fchown',\n  'fdatasync',\n  'fstat',\n  'fsync',\n  'ftruncate',\n  'futimes',\n  'lchown',\n  'lchmod',\n  'link',\n  'lstat',\n  'mkdir',\n  'mkdtemp',\n  'open',\n  'readFile',\n  'readdir',\n  'readlink',\n  'realpath',\n  'rename',\n  'rmdir',\n  'stat',\n  'symlink',\n  'truncate',\n  'unlink',\n  'utimes',\n  'writeFile'\n].filter(key => {\n  // Some commands are not available on some systems. Ex:\n  // fs.copyFile was added in Node.js v8.5.0\n  // fs.mkdtemp was added in Node.js v5.10.0\n  // fs.lchown is not available on at least some Linux\n  return typeof fs[key] === 'function'\n})\n\n// Export all keys:\nObject.keys(fs).forEach(key => {\n  if (key === 'promises') {\n    // fs.promises is a getter property that triggers ExperimentalWarning\n    // Don't re-export it here, the getter is defined in \"lib/index.js\"\n    return\n  }\n  exports[key] = fs[key]\n})\n\n// Universalify async methods:\napi.forEach(method => {\n  exports[method] = u(fs[method])\n})\n\n// We differ from mz/fs in that we still ship the old, broken, fs.exists()\n// since we are a drop-in replacement for the native module\nexports.exists = function (filename, callback) {\n  if (typeof callback === 'function') {\n    return fs.exists(filename, callback)\n  }\n  return new Promise(resolve => {\n    return fs.exists(filename, resolve)\n  })\n}\n\n// fs.read() & fs.write need special treatment due to multiple callback args\n\nexports.read = function (fd, buffer, offset, length, position, callback) {\n  if (typeof callback === 'function') {\n    return fs.read(fd, buffer, offset, length, position, callback)\n  }\n  return new Promise((resolve, reject) => {\n    fs.read(fd, buffer, offset, length, position, (err, bytesRead, buffer) => {\n      if (err) return reject(err)\n      resolve({ bytesRead, buffer })\n    })\n  })\n}\n\n// Function signature can be\n// fs.write(fd, buffer[, offset[, length[, position]]], callback)\n// OR\n// fs.write(fd, string[, position[, encoding]], callback)\n// We need to handle both cases, so we use ...args\nexports.write = function (fd, buffer, ...args) {\n  if (typeof args[args.length - 1] === 'function') {\n    return fs.write(fd, buffer, ...args)\n  }\n\n  return new Promise((resolve, reject) => {\n    fs.write(fd, buffer, ...args, (err, bytesWritten, buffer) => {\n      if (err) return reject(err)\n      resolve({ bytesWritten, buffer })\n    })\n  })\n}\n\n// fs.realpath.native only available in Node v9.2+\nif (typeof fs.realpath.native === 'function') {\n  exports.realpath.native = u(fs.realpath.native)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}