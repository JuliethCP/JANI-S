{"ast":null,"code":"'use strict';\n\nconst u = require('universalify').fromCallback;\nconst fs = require('graceful-fs');\nconst path = require('path');\nconst mkdir = require('../mkdirs');\nconst remove = require('../remove');\nconst emptyDir = u(function emptyDir(dir, callback) {\n  callback = callback || function () {};\n  fs.readdir(dir, (err, items) => {\n    if (err) return mkdir.mkdirs(dir, callback);\n    items = items.map(item => path.join(dir, item));\n    deleteItem();\n    function deleteItem() {\n      const item = items.pop();\n      if (!item) return callback();\n      remove.remove(item, err => {\n        if (err) return callback(err);\n        deleteItem();\n      });\n    }\n  });\n});\nfunction emptyDirSync(dir) {\n  let items;\n  try {\n    items = fs.readdirSync(dir);\n  } catch (err) {\n    return mkdir.mkdirsSync(dir);\n  }\n  items.forEach(item => {\n    item = path.join(dir, item);\n    remove.removeSync(item);\n  });\n}\nmodule.exports = {\n  emptyDirSync,\n  emptydirSync: emptyDirSync,\n  emptyDir,\n  emptydir: emptyDir\n};","map":{"version":3,"names":["u","require","fromCallback","fs","path","mkdir","remove","emptyDir","dir","callback","readdir","err","items","mkdirs","map","item","join","deleteItem","pop","emptyDirSync","readdirSync","mkdirsSync","forEach","removeSync","module","exports","emptydirSync","emptydir"],"sources":["D:/Julieth-Campos/PSO/node_modules/get-uri/node_modules/fs-extra/lib/empty/index.js"],"sourcesContent":["'use strict'\n\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdir = require('../mkdirs')\nconst remove = require('../remove')\n\nconst emptyDir = u(function emptyDir (dir, callback) {\n  callback = callback || function () {}\n  fs.readdir(dir, (err, items) => {\n    if (err) return mkdir.mkdirs(dir, callback)\n\n    items = items.map(item => path.join(dir, item))\n\n    deleteItem()\n\n    function deleteItem () {\n      const item = items.pop()\n      if (!item) return callback()\n      remove.remove(item, err => {\n        if (err) return callback(err)\n        deleteItem()\n      })\n    }\n  })\n})\n\nfunction emptyDirSync (dir) {\n  let items\n  try {\n    items = fs.readdirSync(dir)\n  } catch (err) {\n    return mkdir.mkdirsSync(dir)\n  }\n\n  items.forEach(item => {\n    item = path.join(dir, item)\n    remove.removeSync(item)\n  })\n}\n\nmodule.exports = {\n  emptyDirSync,\n  emptydirSync: emptyDirSync,\n  emptyDir,\n  emptydir: emptyDir\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,CAAC,GAAGC,OAAO,CAAC,cAAc,CAAC,CAACC,YAAY;AAC9C,MAAMC,EAAE,GAAGF,OAAO,CAAC,aAAa,CAAC;AACjC,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMI,KAAK,GAAGJ,OAAO,CAAC,WAAW,CAAC;AAClC,MAAMK,MAAM,GAAGL,OAAO,CAAC,WAAW,CAAC;AAEnC,MAAMM,QAAQ,GAAGP,CAAC,CAAC,SAASO,QAAQ,CAAEC,GAAG,EAAEC,QAAQ,EAAE;EACnDA,QAAQ,GAAGA,QAAQ,IAAI,YAAY,CAAC,CAAC;EACrCN,EAAE,CAACO,OAAO,CAACF,GAAG,EAAE,CAACG,GAAG,EAAEC,KAAK,KAAK;IAC9B,IAAID,GAAG,EAAE,OAAON,KAAK,CAACQ,MAAM,CAACL,GAAG,EAAEC,QAAQ,CAAC;IAE3CG,KAAK,GAAGA,KAAK,CAACE,GAAG,CAACC,IAAI,IAAIX,IAAI,CAACY,IAAI,CAACR,GAAG,EAAEO,IAAI,CAAC,CAAC;IAE/CE,UAAU,EAAE;IAEZ,SAASA,UAAU,GAAI;MACrB,MAAMF,IAAI,GAAGH,KAAK,CAACM,GAAG,EAAE;MACxB,IAAI,CAACH,IAAI,EAAE,OAAON,QAAQ,EAAE;MAC5BH,MAAM,CAACA,MAAM,CAACS,IAAI,EAAEJ,GAAG,IAAI;QACzB,IAAIA,GAAG,EAAE,OAAOF,QAAQ,CAACE,GAAG,CAAC;QAC7BM,UAAU,EAAE;MACd,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,SAASE,YAAY,CAAEX,GAAG,EAAE;EAC1B,IAAII,KAAK;EACT,IAAI;IACFA,KAAK,GAAGT,EAAE,CAACiB,WAAW,CAACZ,GAAG,CAAC;EAC7B,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZ,OAAON,KAAK,CAACgB,UAAU,CAACb,GAAG,CAAC;EAC9B;EAEAI,KAAK,CAACU,OAAO,CAACP,IAAI,IAAI;IACpBA,IAAI,GAAGX,IAAI,CAACY,IAAI,CAACR,GAAG,EAAEO,IAAI,CAAC;IAC3BT,MAAM,CAACiB,UAAU,CAACR,IAAI,CAAC;EACzB,CAAC,CAAC;AACJ;AAEAS,MAAM,CAACC,OAAO,GAAG;EACfN,YAAY;EACZO,YAAY,EAAEP,YAAY;EAC1BZ,QAAQ;EACRoB,QAAQ,EAAEpB;AACZ,CAAC"},"metadata":{},"sourceType":"script"}