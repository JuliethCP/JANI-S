{"ast":null,"code":"var _jsxFileName = \"D:\\\\Julieth-Campos\\\\PSO\\\\src\\\\components\\\\ScreenRecordingComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./componentCSS/ScreenRecordingComponent.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScreenRecordingComponent(_ref) {\n  _s();\n  let {\n    switchToAnalysis\n  } = _ref;\n  const [isRecording, setIsRecording] = useState(false);\n  const mediaChunks = [];\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [mediaStream, setMediaStream] = useState(null);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getDisplayMedia({\n        video: true,\n        audio: true\n      });\n      const recorder = new MediaRecorder(stream);\n      setMediaStream(stream);\n      recorder.ondataavailable = e => {\n        if (e.data.size > 0) {\n          mediaChunks.push(e.data);\n        }\n      };\n      recorder.onstop = () => {\n        const mediaBlob = new Blob(mediaChunks, {\n          type: \"video/webm\"\n        });\n        mediaChunks.length = 0;\n\n        // Convertir el fragmento de video a mp4 y guardar\n        const videoUrl = URL.createObjectURL(mediaBlob);\n        const a = document.createElement(\"a\");\n        a.href = videoUrl;\n        a.download = \"captura.mp4\"; // Cambia el nombre del archivo si es necesario\n        a.click();\n        URL.revokeObjectURL(videoUrl);\n      };\n      recorder.start();\n      setIsRecording(true);\n      setMediaRecorder(recorder);\n    } catch (error) {\n      console.error(\"Error al acceder a la pantalla o región:\", error);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorder && mediaStream) {\n      mediaRecorder.stop();\n      mediaStream.getTracks().forEach(track => track.stop());\n      setIsRecording(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ScreenRecordingContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Interfaz de Grabaci\\xF3n de Pantalla\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      className: \"VideoPreview\",\n      id: \"preview\",\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ButtonContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Button\",\n        id: \"startRecording\",\n        onClick: startRecording,\n        disabled: isRecording,\n        children: \"Iniciar Grabaci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Button\",\n        id: \"stopRecording\",\n        onClick: stopRecording,\n        disabled: !isRecording,\n        children: \"Detener Grabaci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Button\",\n        onClick: switchToAnalysis,\n        children: \"Cambiar a An\\xE1lisis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(ScreenRecordingComponent, \"kqktPj0sV9n+0CHpXv3j7bZMKmc=\");\n_c = ScreenRecordingComponent;\nexport default ScreenRecordingComponent;\nvar _c;\n$RefreshReg$(_c, \"ScreenRecordingComponent\");","map":{"version":3,"names":["React","useState","ScreenRecordingComponent","switchToAnalysis","isRecording","setIsRecording","mediaChunks","mediaRecorder","setMediaRecorder","mediaStream","setMediaStream","startRecording","stream","navigator","mediaDevices","getDisplayMedia","video","audio","recorder","MediaRecorder","ondataavailable","e","data","size","push","onstop","mediaBlob","Blob","type","length","videoUrl","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","start","error","console","stopRecording","stop","getTracks","forEach","track"],"sources":["D:/Julieth-Campos/PSO/src/components/ScreenRecordingComponent.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./componentCSS/ScreenRecordingComponent.css\"\r\n\r\nfunction ScreenRecordingComponent({ switchToAnalysis }) {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const mediaChunks = [];\r\n  const [mediaRecorder, setMediaRecorder] = useState(null);\r\n  const [mediaStream, setMediaStream] = useState(null);\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getDisplayMedia({ video: true, audio: true });\r\n      const recorder = new MediaRecorder(stream);\r\n      setMediaStream(stream);\r\n\r\n      recorder.ondataavailable = (e) => {\r\n        if (e.data.size > 0) {\r\n          mediaChunks.push(e.data);\r\n        }\r\n      };\r\n\r\n      recorder.onstop = () => {\r\n        const mediaBlob = new Blob(mediaChunks, { type: \"video/webm\" });\r\n        mediaChunks.length = 0;\r\n\r\n        // Convertir el fragmento de video a mp4 y guardar\r\n        const videoUrl = URL.createObjectURL(mediaBlob);\r\n        const a = document.createElement(\"a\");\r\n        a.href = videoUrl;\r\n        a.download = \"captura.mp4\"; // Cambia el nombre del archivo si es necesario\r\n        a.click();\r\n        URL.revokeObjectURL(videoUrl);\r\n      };\r\n\r\n      recorder.start();\r\n      setIsRecording(true);\r\n      setMediaRecorder(recorder);\r\n    } catch (error) {\r\n      console.error(\"Error al acceder a la pantalla o región:\", error);\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorder && mediaStream) {\r\n      mediaRecorder.stop();\r\n      mediaStream.getTracks().forEach((track) => track.stop());\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ScreenRecordingContainer\">\r\n      <h2>Interfaz de Grabación de Pantalla</h2>\r\n      <video className=\"VideoPreview\" id=\"preview\" autoPlay></video>\r\n      <div className=\"ButtonContainer\">\r\n        <button\r\n          className=\"Button\"\r\n          id=\"startRecording\"\r\n          onClick={startRecording}\r\n          disabled={isRecording}\r\n        >\r\n          Iniciar Grabación\r\n        </button>\r\n        <button\r\n          className=\"Button\"\r\n          id=\"stopRecording\"\r\n          onClick={stopRecording}\r\n          disabled={!isRecording}\r\n        >\r\n          Detener Grabación\r\n        </button>\r\n        <button className=\"Button\" onClick={switchToAnalysis}>\r\n          Cambiar a Análisis\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ScreenRecordingComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}